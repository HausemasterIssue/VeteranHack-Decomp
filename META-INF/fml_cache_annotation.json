{
  "club/minnced/discord/rpc/DiscordEventHandlers$OnGameUpdate": {
    "name": "club/minnced/discord/rpc/DiscordEventHandlers$OnGameUpdate",
    "interfaces": [
      "com/sun/jna/Callback"
    ]
  },
  "club/minnced/discord/rpc/DiscordEventHandlers$OnJoinRequest": {
    "name": "club/minnced/discord/rpc/DiscordEventHandlers$OnJoinRequest",
    "interfaces": [
      "com/sun/jna/Callback"
    ]
  },
  "club/minnced/discord/rpc/DiscordEventHandlers$OnReady": {
    "name": "club/minnced/discord/rpc/DiscordEventHandlers$OnReady",
    "interfaces": [
      "com/sun/jna/Callback"
    ]
  },
  "club/minnced/discord/rpc/DiscordEventHandlers$OnStatus": {
    "name": "club/minnced/discord/rpc/DiscordEventHandlers$OnStatus",
    "interfaces": [
      "com/sun/jna/Callback"
    ]
  },
  "club/minnced/discord/rpc/DiscordRPC": {
    "name": "club/minnced/discord/rpc/DiscordRPC",
    "interfaces": [
      "com/sun/jna/Library"
    ]
  },
  "com/veteran/hack/BaseMod": {
    "name": "com/veteran/hack/BaseMod",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lnet/minecraftforge/fml/common/Mod;",
        "target": "com/veteran/hack/BaseMod",
        "values": {
          "modid": {
            "value": "vethack"
          },
          "name": {
            "value": "Veteran Hack"
          },
          "version": {
            "value": "b2.3"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lnet/minecraftforge/fml/common/Mod$Instance;",
        "target": "INSTANCE"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/Mod$EventHandler;",
        "target": "preInit(Lnet/minecraftforge/fml/common/event/FMLPreInitializationEvent;)V"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/Mod$EventHandler;",
        "target": "postInit(Lnet/minecraftforge/fml/common/event/FMLPostInitializationEvent;)V"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/Mod$EventHandler;",
        "target": "init(Lnet/minecraftforge/fml/common/event/FMLInitializationEvent;)V"
      }
    ]
  },
  "com/veteran/hack/command/syntax/parsers/AbstractParser": {
    "name": "com/veteran/hack/command/syntax/parsers/AbstractParser",
    "interfaces": [
      "com/veteran/hack/command/syntax/SyntaxParser"
    ]
  },
  "com/veteran/hack/event/ForgeEventProcessor": {
    "name": "com/veteran/hack/event/ForgeEventProcessor",
    "annotations": [
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onUpdate(Lnet/minecraftforge/event/entity/living/LivingEvent$LivingUpdateEvent;)V"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onTick(Lnet/minecraftforge/fml/common/gameevent/TickEvent$ClientTickEvent;)V"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onWorldRender(Lnet/minecraftforge/client/event/RenderWorldLastEvent;)V"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onRenderPre(Lnet/minecraftforge/client/event/RenderGameOverlayEvent$Pre;)V"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onRender(Lnet/minecraftforge/client/event/RenderGameOverlayEvent$Post;)V"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onKeyInput(Lnet/minecraftforge/fml/common/gameevent/InputEvent$KeyInputEvent;)V",
        "values": {
          "priority": {
            "type": "ENUM",
            "value": "Lnet/minecraftforge/fml/common/eventhandler/EventPriority;/NORMAL"
          },
          "receiveCanceled": {
            "type": "BOOL",
            "value": "true"
          }
        }
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onChatSent(Lnet/minecraftforge/client/event/ClientChatEvent;)V",
        "values": {
          "priority": {
            "type": "ENUM",
            "value": "Lnet/minecraftforge/fml/common/eventhandler/EventPriority;/HIGHEST"
          }
        }
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onPlayerDrawn(Lnet/minecraftforge/client/event/RenderPlayerEvent$Pre;)V",
        "values": {
          "priority": {
            "type": "ENUM",
            "value": "Lnet/minecraftforge/fml/common/eventhandler/EventPriority;/HIGHEST"
          }
        }
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onPlayerDrawn(Lnet/minecraftforge/client/event/RenderPlayerEvent$Post;)V",
        "values": {
          "priority": {
            "type": "ENUM",
            "value": "Lnet/minecraftforge/fml/common/eventhandler/EventPriority;/HIGHEST"
          }
        }
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onChunkLoaded(Lnet/minecraftforge/event/world/ChunkEvent$Load;)V"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onEventMouse(Lnet/minecraftforge/fml/common/gameevent/InputEvent$MouseInputEvent;)V"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onChunkLoaded(Lnet/minecraftforge/event/world/ChunkEvent$Unload;)V"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onInputUpdate(Lnet/minecraftforge/client/event/InputUpdateEvent;)V"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onLivingEntityUseItemEventTick(Lnet/minecraftforge/event/entity/living/LivingEntityUseItemEvent$Start;)V"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onLivingDamageEvent(Lnet/minecraftforge/event/entity/living/LivingDamageEvent;)V"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onEntityJoinWorldEvent(Lnet/minecraftforge/event/entity/EntityJoinWorldEvent;)V"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onPlayerPush(Lnet/minecraftforge/client/event/PlayerSPPushOutOfBlocksEvent;)V"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onLeftClickBlock(Lnet/minecraftforge/event/entity/player/PlayerInteractEvent$LeftClickBlock;)V"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onAttackEntity(Lnet/minecraftforge/event/entity/player/AttackEntityEvent;)V"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "onRenderBlockOverlay(Lnet/minecraftforge/client/event/RenderBlockOverlayEvent;)V"
      }
    ]
  },
  "com/veteran/hack/gui/kami/KamiGUI$1": {
    "name": "com/veteran/hack/gui/kami/KamiGUI$1",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/MouseListener"
    ]
  },
  "com/veteran/hack/gui/kami/KamiGUI$3": {
    "name": "com/veteran/hack/gui/kami/KamiGUI$3",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/MouseListener"
    ]
  },
  "com/veteran/hack/gui/kami/KamiGUI$4": {
    "name": "com/veteran/hack/gui/kami/KamiGUI$4",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/TickListener"
    ]
  },
  "com/veteran/hack/gui/kami/KamiGUI$5": {
    "name": "com/veteran/hack/gui/kami/KamiGUI$5",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/TickListener"
    ]
  },
  "com/veteran/hack/gui/kami/RootFontRenderer": {
    "name": "com/veteran/hack/gui/kami/RootFontRenderer",
    "interfaces": [
      "com/veteran/hack/gui/rgui/render/font/FontRenderer"
    ]
  },
  "com/veteran/hack/gui/kami/Stretcherlayout": {
    "name": "com/veteran/hack/gui/kami/Stretcherlayout",
    "interfaces": [
      "com/veteran/hack/gui/rgui/layout/Layout"
    ]
  },
  "com/veteran/hack/gui/kami/component/ActiveModules$1": {
    "name": "com/veteran/hack/gui/kami/component/ActiveModules$1",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/RenderListener"
    ]
  },
  "com/veteran/hack/gui/kami/component/BindButton$1": {
    "name": "com/veteran/hack/gui/kami/component/BindButton$1",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/KeyListener"
    ]
  },
  "com/veteran/hack/gui/kami/component/BindButton$2": {
    "name": "com/veteran/hack/gui/kami/component/BindButton$2",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/MouseListener"
    ]
  },
  "com/veteran/hack/gui/kami/component/Chat$1": {
    "name": "com/veteran/hack/gui/kami/component/Chat$1",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/KeyListener"
    ]
  },
  "com/veteran/hack/gui/kami/component/UnboundSlider$1": {
    "name": "com/veteran/hack/gui/kami/component/UnboundSlider$1",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/MouseListener"
    ]
  },
  "com/veteran/hack/gui/kami/theme/kami/KamiFrameUI$1": {
    "name": "com/veteran/hack/gui/kami/theme/kami/KamiFrameUI$1",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/MouseListener"
    ]
  },
  "com/veteran/hack/gui/kami/theme/kami/KamiFrameUI$2": {
    "name": "com/veteran/hack/gui/kami/theme/kami/KamiFrameUI$2",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/UpdateListener"
    ]
  },
  "com/veteran/hack/gui/kami/theme/kami/RootScrollpaneUI$1": {
    "name": "com/veteran/hack/gui/kami/theme/kami/RootScrollpaneUI$1",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/MouseListener"
    ]
  },
  "com/veteran/hack/gui/kami/theme/kami/RootScrollpaneUI$2": {
    "name": "com/veteran/hack/gui/kami/theme/kami/RootScrollpaneUI$2",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/RenderListener"
    ]
  },
  "com/veteran/hack/gui/rgui/GUI$1": {
    "name": "com/veteran/hack/gui/rgui/GUI$1",
    "interfaces": [
      "java/util/Comparator"
    ]
  },
  "com/veteran/hack/gui/rgui/component/AbstractComponent": {
    "name": "com/veteran/hack/gui/rgui/component/AbstractComponent",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/Component"
    ]
  },
  "com/veteran/hack/gui/rgui/component/AbstractComponent$1": {
    "name": "com/veteran/hack/gui/rgui/component/AbstractComponent$1",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/MouseListener"
    ]
  },
  "com/veteran/hack/gui/rgui/component/container/AbstractContainer": {
    "name": "com/veteran/hack/gui/rgui/component/container/AbstractContainer",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/container/Container"
    ]
  },
  "com/veteran/hack/gui/rgui/component/container/AbstractContainer$1": {
    "name": "com/veteran/hack/gui/rgui/component/container/AbstractContainer$1",
    "interfaces": [
      "java/util/Comparator"
    ]
  },
  "com/veteran/hack/gui/rgui/component/container/Container": {
    "name": "com/veteran/hack/gui/rgui/component/container/Container",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/Component"
    ]
  },
  "com/veteran/hack/gui/rgui/component/container/use/Frame$2": {
    "name": "com/veteran/hack/gui/rgui/component/container/use/Frame$2",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/UpdateListener"
    ]
  },
  "com/veteran/hack/gui/rgui/component/container/use/Frame$3": {
    "name": "com/veteran/hack/gui/rgui/component/container/use/Frame$3",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/RenderListener"
    ]
  },
  "com/veteran/hack/gui/rgui/component/container/use/Frame$GayMouseListener": {
    "name": "com/veteran/hack/gui/rgui/component/container/use/Frame$GayMouseListener",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/MouseListener"
    ]
  },
  "com/veteran/hack/gui/rgui/component/container/use/Scrollpane$1": {
    "name": "com/veteran/hack/gui/rgui/component/container/use/Scrollpane$1",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/RenderListener"
    ]
  },
  "com/veteran/hack/gui/rgui/component/container/use/Scrollpane$2": {
    "name": "com/veteran/hack/gui/rgui/component/container/use/Scrollpane$2",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/MouseListener"
    ]
  },
  "com/veteran/hack/gui/rgui/component/container/use/Scrollpane$3": {
    "name": "com/veteran/hack/gui/rgui/component/container/use/Scrollpane$3",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/UpdateListener"
    ]
  },
  "com/veteran/hack/gui/rgui/component/use/Button$1": {
    "name": "com/veteran/hack/gui/rgui/component/use/Button$1",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/MouseListener"
    ]
  },
  "com/veteran/hack/gui/rgui/component/use/CheckButton$1": {
    "name": "com/veteran/hack/gui/rgui/component/use/CheckButton$1",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/MouseListener"
    ]
  },
  "com/veteran/hack/gui/rgui/component/use/InputField$1": {
    "name": "com/veteran/hack/gui/rgui/component/use/InputField$1",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/RenderListener"
    ]
  },
  "com/veteran/hack/gui/rgui/component/use/InputField$2": {
    "name": "com/veteran/hack/gui/rgui/component/use/InputField$2",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/KeyListener"
    ]
  },
  "com/veteran/hack/gui/rgui/component/use/InputField$3": {
    "name": "com/veteran/hack/gui/rgui/component/use/InputField$3",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/MouseListener"
    ]
  },
  "com/veteran/hack/gui/rgui/component/use/InputField$4": {
    "name": "com/veteran/hack/gui/rgui/component/use/InputField$4",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/RenderListener"
    ]
  },
  "com/veteran/hack/gui/rgui/component/use/Slider$1": {
    "name": "com/veteran/hack/gui/rgui/component/use/Slider$1",
    "interfaces": [
      "com/veteran/hack/gui/rgui/component/listen/MouseListener"
    ]
  },
  "com/veteran/hack/gui/rgui/layout/GridbagLayout": {
    "name": "com/veteran/hack/gui/rgui/layout/GridbagLayout",
    "interfaces": [
      "com/veteran/hack/gui/rgui/layout/Layout"
    ]
  },
  "com/veteran/hack/gui/rgui/layout/UselessLayout": {
    "name": "com/veteran/hack/gui/rgui/layout/UselessLayout",
    "interfaces": [
      "com/veteran/hack/gui/rgui/layout/Layout"
    ]
  },
  "com/veteran/hack/gui/rgui/poof/use/Poof": {
    "name": "com/veteran/hack/gui/rgui/poof/use/Poof",
    "interfaces": [
      "com/veteran/hack/gui/rgui/poof/IPoof"
    ]
  },
  "com/veteran/hack/gui/rgui/render/AbstractComponentUI": {
    "name": "com/veteran/hack/gui/rgui/render/AbstractComponentUI",
    "interfaces": [
      "com/veteran/hack/gui/rgui/render/ComponentUI"
    ]
  },
  "com/veteran/hack/gui/rgui/render/theme/AbstractTheme": {
    "name": "com/veteran/hack/gui/rgui/render/theme/AbstractTheme",
    "interfaces": [
      "com/veteran/hack/gui/rgui/render/theme/Theme"
    ]
  },
  "com/veteran/hack/mixin/MixinLoaderForge": {
    "name": "com/veteran/hack/mixin/MixinLoaderForge",
    "interfaces": [
      "net/minecraftforge/fml/relauncher/IFMLLoadingPlugin"
    ]
  },
  "com/veteran/hack/mixin/client/MixinAbstractClientPlayer": {
    "name": "com/veteran/hack/mixin/client/MixinAbstractClientPlayer",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinAbstractClientPlayer",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/client/entity/AbstractClientPlayer;"
          ]
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinBlockLiquid": {
    "name": "com/veteran/hack/mixin/client/MixinBlockLiquid",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinBlockLiquid",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/block/BlockLiquid;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 435,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "modifyAcceleration(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/Vec3d;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "435"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "modifyAcceleration"
            ]
          }
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 436,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "canCollideCheck(Lnet/minecraft/block/state/IBlockState;ZLorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "436"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "canCollideCheck"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinBlockSoulSand": {
    "name": "com/veteran/hack/mixin/client/MixinBlockSoulSand",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinBlockSoulSand",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/block/BlockSoulSand;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 423,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "onEntityCollidedWithBlock(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "423"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "onEntityCollision"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinBlockWeb": {
    "name": "com/veteran/hack/mixin/client/MixinBlockWeb",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinBlockWeb",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/block/BlockWeb;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 426,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "onEntityCollidedWithBlock(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "426"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "onEntityCollision"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinC00Handshake": {
    "name": "com/veteran/hack/mixin/client/MixinC00Handshake",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinC00Handshake",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/network/handshake/client/C00Handshake;"
          ]
        }
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "field_149600_a"
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "field_149598_b"
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "field_149599_c"
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "field_149597_d"
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 424,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "writePacketData(Lnet/minecraft/network/PacketBuffer;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "424"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "writePacketData"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinChunkCache": {
    "name": "com/veteran/hack/mixin/client/MixinChunkCache",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinChunkCache",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/world/ChunkCache;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 433,
        "value": {
          "value": "RETURN"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "getState(Lnet/minecraft/util/math/BlockPos;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "433"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "getBlockState"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinEntity": {
    "name": "com/veteran/hack/mixin/client/MixinEntity",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinEntity",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/entity/Entity;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 438,
        "values": {
          "target": {
            "value": "Lnet/minecraft/entity/Entity;addVelocity(DDD)V"
          },
          "value": {
            "value": "INVOKE"
          }
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Redirect;",
        "target": "addVelocity(Lnet/minecraft/entity/Entity;DDD)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "value": "438"
          },
          "method": {
            "values": [
              "applyEntityCollision"
            ]
          }
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 439,
        "values": {
          "target": {
            "value": "Lnet/minecraft/entity/Entity;isSneaking()Z"
          },
          "value": {
            "value": "INVOKE"
          }
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Redirect;",
        "target": "isSneaking(Lnet/minecraft/entity/Entity;)Z",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "value": "439"
          },
          "method": {
            "values": [
              "move"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinEntityLlama": {
    "name": "com/veteran/hack/mixin/client/MixinEntityLlama",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinEntityLlama",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/entity/passive/EntityLlama;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 414,
        "value": {
          "value": "RETURN"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "canBeSteered(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "414"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "canBeSteered"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinEntityPig": {
    "name": "com/veteran/hack/mixin/client/MixinEntityPig",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinEntityPig",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/entity/passive/EntityPig;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 419,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "canBeSteered(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "419"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "canBeSteered"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinEntityPlayerSP": {
    "name": "com/veteran/hack/mixin/client/MixinEntityPlayerSP",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinEntityPlayerSP",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/client/entity/EntityPlayerSP;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 420,
        "values": {
          "target": {
            "value": "Lnet/minecraft/client/entity/EntityPlayerSP;closeScreen()V"
          },
          "value": {
            "value": "INVOKE"
          }
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Redirect;",
        "target": "closeScreen(Lnet/minecraft/client/entity/EntityPlayerSP;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "value": "420"
          },
          "method": {
            "values": [
              "onLivingUpdate"
            ]
          }
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 421,
        "values": {
          "target": {
            "value": "Lnet/minecraft/client/Minecraft;displayGuiScreen(Lnet/minecraft/client/gui/GuiScreen;)V"
          },
          "value": {
            "value": "INVOKE"
          }
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Redirect;",
        "target": "closeScreen(Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/GuiScreen;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "value": "421"
          },
          "method": {
            "values": [
              "onLivingUpdate"
            ]
          }
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 422,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "move(Lnet/minecraft/entity/MoverType;DDDLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "422"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "move"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinFrustum": {
    "name": "com/veteran/hack/mixin/client/MixinFrustum",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinFrustum",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/client/renderer/culling/Frustum;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 413,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "isBoundingBoxEtc(Lnet/minecraft/util/math/AxisAlignedBB;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "413"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "Lnet/minecraft/client/renderer/culling/Frustum;isBoundingBoxInFrustum(Lnet/minecraft/util/math/AxisAlignedBB;)Z"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinGuiChat": {
    "name": "com/veteran/hack/mixin/client/MixinGuiChat",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinGuiChat",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/client/gui/GuiChat;"
          ]
        }
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "field_146415_a"
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "field_146410_g"
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "field_146416_h"
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "func_73866_w_()V"
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 434,
        "value": {
          "value": "RETURN"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "returnKeyTyped(CILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "434"
            ]
          },
          "method": {
            "values": [
              "Lnet/minecraft/client/gui/GuiChat;keyTyped(CI)V"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinGuiNewChat": {
    "name": "com/veteran/hack/mixin/client/MixinGuiNewChat",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinGuiNewChat",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/client/gui/GuiNewChat;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 427,
        "values": {
          "target": {
            "value": "Lnet/minecraft/client/gui/GuiNewChat;drawRect(IIIII)V"
          },
          "value": {
            "value": "INVOKE"
          }
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Redirect;",
        "target": "drawRectBackgroundClean(IIIII)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "value": "427"
          },
          "method": {
            "values": [
              "drawChat"
            ]
          }
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 428,
        "values": {
          "target": {
            "value": "Lnet/minecraft/client/gui/FontRenderer;drawStringWithShadow(Ljava/lang/String;FFI)I"
          },
          "value": {
            "value": "INVOKE"
          }
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Redirect;",
        "target": "drawStringWithShadowClean(Lnet/minecraft/client/gui/FontRenderer;Ljava/lang/String;FFI)I",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "value": "428"
          },
          "method": {
            "values": [
              "drawChat"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinGuiPlayerTabOverlay": {
    "name": "com/veteran/hack/mixin/client/MixinGuiPlayerTabOverlay",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinGuiPlayerTabOverlay",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/client/gui/GuiPlayerTabOverlay;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 443,
        "values": {
          "remap": {
            "type": "BOOL",
            "value": "false"
          },
          "target": {
            "value": "Ljava/util/List;subList(II)Ljava/util/List;"
          },
          "value": {
            "value": "INVOKE"
          }
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Redirect;",
        "target": "subList(Ljava/util/List;II)Ljava/util/List;",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "value": "443"
          },
          "method": {
            "values": [
              "renderPlayerlist"
            ]
          }
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 444,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "getPlayerName(Lnet/minecraft/client/network/NetworkPlayerInfo;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "444"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "getPlayerName"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinGuiScreen": {
    "name": "com/veteran/hack/mixin/client/MixinGuiScreen",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinGuiScreen",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/client/gui/GuiScreen;"
          ]
        }
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "field_146297_k"
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 408,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "renderToolTip(Lnet/minecraft/item/ItemStack;IILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "408"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "renderToolTip"
            ]
          }
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 409,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "drawWorldBackgroundWrapper(ILorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "409"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "Lnet/minecraft/client/gui/GuiScreen;drawWorldBackground(I)V"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinLayerArmorBase": {
    "name": "com/veteran/hack/mixin/client/MixinLayerArmorBase",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinLayerArmorBase",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/client/renderer/entity/layers/LayerArmorBase;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 440,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "onRenderArmorLayer(Lnet/minecraft/entity/EntityLivingBase;FFFFFFFLnet/minecraft/inventory/EntityEquipmentSlot;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "440"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "renderArmorLayer"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinMinecraft": {
    "name": "com/veteran/hack/mixin/client/MixinMinecraft",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinMinecraft",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/client/Minecraft;"
          ]
        }
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "field_71441_e"
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "field_71439_g"
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "field_71462_r"
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "field_71474_y"
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "field_71456_v"
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "field_71454_w"
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "field_147127_av"
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 416,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "displayGuiScreen(Lnet/minecraft/client/gui/GuiScreen;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "416"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "displayGuiScreen"
            ]
          }
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 417,
        "values": {
          "target": {
            "value": "Lnet/minecraft/client/Minecraft;displayCrashReport(Lnet/minecraft/crash/CrashReport;)V"
          },
          "value": {
            "value": "INVOKE"
          }
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Redirect;",
        "target": "displayCrashReport(Lnet/minecraft/client/Minecraft;Lnet/minecraft/crash/CrashReport;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "value": "417"
          },
          "method": {
            "values": [
              "run"
            ]
          }
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 418,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "shutdown(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "418"
            ]
          },
          "method": {
            "values": [
              "shutdown"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinModelBoat": {
    "name": "com/veteran/hack/mixin/client/MixinModelBoat",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinModelBoat",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/client/model/ModelBoat;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 425,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "render(Lnet/minecraft/entity/Entity;FFFFFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "425"
            ]
          },
          "method": {
            "values": [
              "render"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinNetHandlerPlayClient": {
    "name": "com/veteran/hack/mixin/client/MixinNetHandlerPlayClient",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinNetHandlerPlayClient",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/client/network/NetHandlerPlayClient;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 437,
        "values": {
          "target": {
            "value": "Lnet/minecraft/world/chunk/Chunk;read(Lnet/minecraft/network/PacketBuffer;IZ)V"
          },
          "value": {
            "value": "INVOKE"
          }
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "read(Lnet/minecraft/network/play/server/SPacketChunkData;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;Lnet/minecraft/world/chunk/Chunk;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "437"
            ]
          },
          "locals": {
            "type": "ENUM",
            "value": "Lorg/spongepowered/asm/mixin/injection/callback/LocalCapture;/CAPTURE_FAILHARD"
          },
          "method": {
            "values": [
              "handleChunkData"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinNetworkManager": {
    "name": "com/veteran/hack/mixin/client/MixinNetworkManager",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinNetworkManager",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/network/NetworkManager;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 410,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "onSendPacket(Lnet/minecraft/network/Packet;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "410"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "sendPacket(Lnet/minecraft/network/Packet;)V"
            ]
          }
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 411,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "onChannelRead(Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/Packet;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "411"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "channelRead0"
            ]
          }
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 412,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "exceptionCaught(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "412"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "exceptionCaught"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinPlayerControllerMP": {
    "name": "com/veteran/hack/mixin/client/MixinPlayerControllerMP",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinPlayerControllerMP",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/client/multiplayer/PlayerControllerMP;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 430,
        "values": {
          "target": {
            "value": "Lnet/minecraft/block/state/IBlockState;getPlayerRelativeBlockHardness(Lnet/minecraft/entity/player/EntityPlayer;Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;)F"
          },
          "value": {
            "value": "INVOKE"
          }
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Redirect;",
        "target": "getPlayerRelativeBlockHardness(Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/entity/player/EntityPlayer;Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;)F",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "value": "430"
          },
          "method": {
            "values": [
              "onPlayerDamageBlock"
            ]
          }
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 431,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "attackEntity(Lnet/minecraft/entity/player/EntityPlayer;Lnet/minecraft/entity/Entity;Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "431"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "attackEntity"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinRenderGlobal": {
    "name": "com/veteran/hack/mixin/client/MixinRenderGlobal",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinRenderGlobal",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/client/renderer/RenderGlobal;"
          ]
        }
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "field_72777_q"
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "field_174996_N"
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinRenderLiving": {
    "name": "com/veteran/hack/mixin/client/MixinRenderLiving",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinRenderLiving",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/client/renderer/entity/RenderLiving;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 441,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "injectChamsPre(Lnet/minecraft/entity/EntityLiving;DDDFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "441"
            ]
          },
          "method": {
            "values": [
              "doRender"
            ]
          }
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 442,
        "value": {
          "value": "RETURN"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "injectChamsPost(Lnet/minecraft/entity/EntityLiving;DDDFFLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "442"
            ]
          },
          "method": {
            "values": [
              "doRender"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinRenderPlayer": {
    "name": "com/veteran/hack/mixin/client/MixinRenderPlayer",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinRenderPlayer",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/client/renderer/entity/RenderPlayer;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 429,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "renderLivingLabel(Lnet/minecraft/client/entity/AbstractClientPlayer;DDDLjava/lang/String;DLorg/spongepowered/asm/mixin/injection/callback/CallbackInfo;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "429"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "renderEntityName"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinStateImplementation": {
    "name": "com/veteran/hack/mixin/client/MixinStateImplementation",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinStateImplementation",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/block/state/BlockStateContainer$StateImplementation;"
          ]
        }
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Shadow;",
        "target": "field_177239_a"
      },
      {
        "type": "FIELD",
        "name": "Lorg/spongepowered/asm/mixin/Final;",
        "target": "field_177239_a"
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 432,
        "values": {
          "target": {
            "value": "Lnet/minecraft/block/Block;addCollisionBoxToList(Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/math/AxisAlignedBB;Ljava/util/List;Lnet/minecraft/entity/Entity;Z)V"
          },
          "value": {
            "value": "INVOKE"
          }
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Redirect;",
        "target": "addCollisionBoxToList(Lnet/minecraft/block/Block;Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/math/AxisAlignedBB;Ljava/util/List;Lnet/minecraft/entity/Entity;Z)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "value": "432"
          },
          "method": {
            "values": [
              "addCollisionBoxToList"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/mixin/client/MixinVisGraph": {
    "name": "com/veteran/hack/mixin/client/MixinVisGraph",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/Mixin;",
        "target": "com/veteran/hack/mixin/client/MixinVisGraph",
        "value": {
          "type": "CLASS",
          "values": [
            "Lnet/minecraft/client/renderer/chunk/VisGraph;"
          ]
        }
      },
      {
        "type": "SUBTYPE",
        "name": "Lorg/spongepowered/asm/mixin/injection/At;",
        "id": 415,
        "value": {
          "value": "HEAD"
        }
      },
      {
        "type": "METHOD",
        "name": "Lorg/spongepowered/asm/mixin/injection/Inject;",
        "target": "getVisibleFacings(Lorg/spongepowered/asm/mixin/injection/callback/CallbackInfoReturnable;)V",
        "values": {
          "at": {
            "type": "ANNOTATION",
            "values": [
              "415"
            ]
          },
          "cancellable": {
            "type": "BOOL",
            "value": "true"
          },
          "method": {
            "values": [
              "getVisibleFacings"
            ]
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/Module$Info": {
    "name": "com/veteran/hack/module/Module$Info",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "com/veteran/hack/module/modules/ClickGUI": {
    "name": "com/veteran/hack/module/modules/ClickGUI",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/ClickGUI",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Opens the Click GUI"
          },
          "name": {
            "value": "clickGUI"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/chat/Announcer": {
    "name": "com/veteran/hack/module/modules/chat/Announcer",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/chat/Announcer",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/CHAT"
          },
          "description": {
            "value": "annoys chat lmaoo"
          },
          "name": {
            "value": "Announcer"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/chat/AntiSpam": {
    "name": "com/veteran/hack/module/modules/chat/AntiSpam",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/chat/AntiSpam",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/CHAT"
          },
          "description": {
            "value": "Removes spam and advertising from the chat"
          },
          "name": {
            "value": "AntiSpam"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "listener"
      }
    ]
  },
  "com/veteran/hack/module/modules/chat/AutoQMain": {
    "name": "com/veteran/hack/module/modules/chat/AutoQMain",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/chat/AutoQMain",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/CHAT"
          },
          "description": {
            "value": "Automatically does /queue main on 2b2t.org"
          },
          "name": {
            "value": "AutoQMain"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/chat/AutoReply": {
    "name": "com/veteran/hack/module/modules/chat/AutoReply",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/chat/AutoReply",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/CHAT"
          },
          "description": {
            "value": "Automatically replies to messages"
          },
          "name": {
            "value": "AutoReply"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "receiveListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/chat/AutoTPA": {
    "name": "com/veteran/hack/module/modules/chat/AutoTPA",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/chat/AutoTPA",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Automatically decline or accept TPA requests"
          },
          "name": {
            "value": "AutoTPA"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "receiveListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/chat/ChadChat": {
    "name": "com/veteran/hack/module/modules/chat/ChadChat",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/chat/ChadChat",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/CHAT"
          },
          "description": {
            "value": "Modifies your chat messages"
          },
          "name": {
            "value": "ChadChat"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "listener"
      }
    ]
  },
  "com/veteran/hack/module/modules/chat/ChatEncryption": {
    "name": "com/veteran/hack/module/modules/chat/ChatEncryption",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/chat/ChatEncryption",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Encrypts and decrypts chat messages (Delimiter %)"
          },
          "name": {
            "value": "ChatEncryption"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "sendListener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "receiveListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/chat/ChatTimestamp": {
    "name": "com/veteran/hack/module/modules/chat/ChatTimestamp",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/chat/ChatTimestamp",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/CHAT"
          },
          "description": {
            "value": "Shows the time a message was sent beside the message"
          },
          "name": {
            "value": "ChatTimestamp"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "listener"
      }
    ]
  },
  "com/veteran/hack/module/modules/chat/CustomChat": {
    "name": "com/veteran/hack/module/modules/chat/CustomChat",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/chat/CustomChat",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/CHAT"
          },
          "description": {
            "value": "Add a custom suffix to the end of your message!"
          },
          "name": {
            "value": "CustomChat"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "listener"
      }
    ]
  },
  "com/veteran/hack/module/modules/chat/FormatChat": {
    "name": "com/veteran/hack/module/modules/chat/FormatChat",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/chat/FormatChat",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Add colour and linebreak support to upstream chat packets"
          },
          "name": {
            "value": "FormatChat"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "sendListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/chat/PortalChat": {
    "name": "com/veteran/hack/module/modules/chat/PortalChat",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/chat/PortalChat",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/CHAT"
          },
          "description": {
            "value": "Allows you to open GUIs in portals"
          },
          "name": {
            "value": "PortalChat"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/AntiBowSpammer": {
    "name": "com/veteran/hack/module/modules/combat/AntiBowSpammer",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/AntiBowSpammer",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/CHAT"
          },
          "description": {
            "value": "insults bowspammers so they feel bad about themselves xd"
          },
          "name": {
            "value": "Anti Bowspammer"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/ArmorWarning": {
    "name": "com/veteran/hack/module/modules/combat/ArmorWarning",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/ArmorWarning",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/COMBAT"
          },
          "description": {
            "value": "displays a warning when your armor is below a threshold"
          },
          "name": {
            "value": "Durability Warning"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/Aura": {
    "name": "com/veteran/hack/module/modules/combat/Aura",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/Aura",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/COMBAT"
          },
          "description": {
            "value": "Hits entities around you"
          },
          "name": {
            "value": "Aura"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/AutoEZ": {
    "name": "com/veteran/hack/module/modules/combat/AutoEZ",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/AutoEZ",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/CHAT"
          },
          "description": {
            "value": "Sends an insult in chat after killing someone"
          },
          "name": {
            "value": "AutoEZ"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "livingDeathEventListener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "listener"
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/AutoExcuse": {
    "name": "com/veteran/hack/module/modules/combat/AutoExcuse",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/AutoExcuse",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/COMBAT"
          },
          "description": {
            "value": "Tells other players why they shouldnt have killed you"
          },
          "name": {
            "value": "Automatic Excuse"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/AutoExp": {
    "name": "com/veteran/hack/module/modules/combat/AutoExp",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/AutoExp",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/COMBAT"
          },
          "description": {
            "value": "Automatically mends armour"
          },
          "name": {
            "value": "AutoExp"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "receiveListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/AutoFeetPlace": {
    "name": "com/veteran/hack/module/modules/combat/AutoFeetPlace",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/AutoFeetPlace",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/COMBAT"
          },
          "description": {
            "value": "Continually places obsidian around your feet"
          },
          "name": {
            "value": "AutoFeetPlace"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/AutoLog": {
    "name": "com/veteran/hack/module/modules/combat/AutoLog",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/AutoLog",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Automatically log when in danger or on low health"
          },
          "name": {
            "value": "AutoLog"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "livingDamageEventListener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "entityJoinWorldEventListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/AutoOffhand": {
    "name": "com/veteran/hack/module/modules/combat/AutoOffhand",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/AutoOffhand",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/COMBAT"
          },
          "description": {
            "value": "Refills your offhand with totems or other items"
          },
          "name": {
            "value": "BetterOffhand"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/AutoReplenish": {
    "name": "com/veteran/hack/module/modules/combat/AutoReplenish",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/AutoReplenish",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/COMBAT"
          },
          "description": {
            "value": "Refills items in your hotbar"
          },
          "name": {
            "value": "AutoReplenish"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/AutoTrap": {
    "name": "com/veteran/hack/module/modules/combat/AutoTrap",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/AutoTrap",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/COMBAT"
          },
          "description": {
            "value": "Traps your enemies in obsidian"
          },
          "name": {
            "value": "AutoTrap"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/Autocrystal": {
    "name": "com/veteran/hack/module/modules/combat/Autocrystal",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/Autocrystal",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/COMBAT"
          },
          "description": {
            "value": "Places Crystals to kill enemies."
          },
          "name": {
            "value": "Autocrystal"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "cPacketListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/CityESP": {
    "name": "com/veteran/hack/module/modules/combat/CityESP",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/CityESP",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/RENDER"
          },
          "description": {
            "value": "draws a square on the face of a block that can be mined to city-trap your opponent."
          },
          "name": {
            "value": "CityESP"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/Criticals": {
    "name": "com/veteran/hack/module/modules/combat/Criticals",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/Criticals",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/COMBAT"
          },
          "description": {
            "value": "Always do critical attacks"
          },
          "name": {
            "value": "Criticals"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "attackEntityEventListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/Fastuse": {
    "name": "com/veteran/hack/module/modules/combat/Fastuse",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/Fastuse",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/COMBAT"
          },
          "description": {
            "value": "Use items faster"
          },
          "name": {
            "value": "FastUse"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/HoleFiller": {
    "name": "com/veteran/hack/module/modules/combat/HoleFiller",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/HoleFiller",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/COMBAT"
          },
          "name": {
            "value": "HoleFiller"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "packetListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/NoFoodGlitch": {
    "name": "com/veteran/hack/module/modules/combat/NoFoodGlitch",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/NoFoodGlitch",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/COMBAT"
          },
          "description": {
            "value": "Attempts to stop gapple disease and makes eating easier in low tps"
          },
          "name": {
            "value": "BetterGapple"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "sendListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/OffhandGap": {
    "name": "com/veteran/hack/module/modules/combat/OffhandGap",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/OffhandGap",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/COMBAT"
          },
          "description": {
            "value": "Holds a God apple when right clicking your sword!"
          },
          "name": {
            "value": "OffhandGap"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "sendListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/SelfTrap": {
    "name": "com/veteran/hack/module/modules/combat/SelfTrap",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/SelfTrap",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/COMBAT"
          },
          "name": {
            "value": "SelfTrap"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/Surround": {
    "name": "com/veteran/hack/module/modules/combat/Surround",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/Surround",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/COMBAT"
          },
          "description": {
            "value": "Surrounds you with obsidian to take less damage"
          },
          "name": {
            "value": "Surround"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/combat/TotemPopCounter": {
    "name": "com/veteran/hack/module/modules/combat/TotemPopCounter",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/combat/TotemPopCounter",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/COMBAT"
          },
          "description": {
            "value": "Counts how many times players pop"
          },
          "name": {
            "value": "TotemPopCounter"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "listListener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "popListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/experimental/FancyChat": {
    "name": "com/veteran/hack/module/modules/experimental/FancyChat",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/experimental/FancyChat",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/EXPERIMENTAL"
          },
          "description": {
            "value": "Makes messages you send fancy"
          },
          "name": {
            "value": "FancyChat"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "listener"
      }
    ]
  },
  "com/veteran/hack/module/modules/experimental/GUIColour": {
    "name": "com/veteran/hack/module/modules/experimental/GUIColour",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/experimental/GUIColour",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/EXPERIMENTAL"
          },
          "description": {
            "value": "Change GUI Colours"
          },
          "name": {
            "value": "GUI Colour"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/exploits/DupeFreecam": {
    "name": "com/veteran/hack/module/modules/exploits/DupeFreecam",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/exploits/DupeFreecam",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/EXPLOIT"
          },
          "description": {
            "value": "modified freecam from TAE to minimize ram usage and remove another client"
          },
          "name": {
            "value": "Dupe Freecam"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "livingUpdateListener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "receiveListener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "getListener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "worldLoadListener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "renderLivingListener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "renderTagListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/exploits/DupeTimer": {
    "name": "com/veteran/hack/module/modules/exploits/DupeTimer",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/exploits/DupeTimer",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/EXPLOIT"
          },
          "description": {
            "value": "Assists with timing for the new donkey dupe"
          },
          "name": {
            "value": "Dupe Timer"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/exploits/PacketCanceller": {
    "name": "com/veteran/hack/module/modules/exploits/PacketCanceller",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/exploits/PacketCanceller",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/EXPLOIT"
          },
          "description": {
            "value": "Cancels packets to do the ice donkey dupe"
          },
          "name": {
            "value": "PacketCanceller"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "sendListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/gui/ActiveModules": {
    "name": "com/veteran/hack/module/modules/gui/ActiveModules",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/gui/ActiveModules",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/GUI"
          },
          "description": {
            "value": "Configures ActiveModules Colour"
          },
          "name": {
            "value": "ActiveModules"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/gui/ArmourHide": {
    "name": "com/veteran/hack/module/modules/gui/ArmourHide",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/gui/ArmourHide",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/GUI"
          },
          "description": {
            "value": "Hides the armour on selected entities"
          },
          "name": {
            "value": "ArmourHide"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/gui/CleanGUI": {
    "name": "com/veteran/hack/module/modules/gui/CleanGUI",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/gui/CleanGUI",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/GUI"
          },
          "description": {
            "value": "Modifies parts of the GUI to be transparent"
          },
          "name": {
            "value": "CleanGUI"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/gui/InfoOverlay": {
    "name": "com/veteran/hack/module/modules/gui/InfoOverlay",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/gui/InfoOverlay",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/GUI"
          },
          "description": {
            "value": "Configures the game information overlay"
          },
          "name": {
            "value": "InfoOverlay"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/gui/InventoryViewer": {
    "name": "com/veteran/hack/module/modules/gui/InventoryViewer",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/gui/InventoryViewer",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/GUI"
          },
          "description": {
            "value": "View your inventory on screen"
          },
          "name": {
            "value": "InventoryViewer"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/gui/PlayerView": {
    "name": "com/veteran/hack/module/modules/gui/PlayerView",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/gui/PlayerView",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/GUI"
          },
          "description": {
            "value": "renders player"
          },
          "name": {
            "value": "Player View"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/gui/PrefixChat": {
    "name": "com/veteran/hack/module/modules/gui/PrefixChat",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/gui/PrefixChat",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/GUI"
          },
          "description": {
            "value": "Opens chat with prefix inside when prefix is pressed."
          },
          "name": {
            "value": "PrefixChat"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/gui/Zoom": {
    "name": "com/veteran/hack/module/modules/gui/Zoom",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/gui/Zoom",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/GUI"
          },
          "description": {
            "value": "Configures FOV"
          },
          "name": {
            "value": "Zoom"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/hidden/AntiWeather": {
    "name": "com/veteran/hack/module/modules/hidden/AntiWeather",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/hidden/AntiWeather",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Removes rain from your world"
          },
          "name": {
            "value": "AntiWeather"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/hidden/AutoEncourager": {
    "name": "com/veteran/hack/module/modules/hidden/AutoEncourager",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/hidden/AutoEncourager",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Automatically Encourage player client side"
          },
          "name": {
            "value": "AutoEncourage"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/hidden/AutoFish": {
    "name": "com/veteran/hack/module/modules/hidden/AutoFish",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/hidden/AutoFish",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Automatically catch fish"
          },
          "name": {
            "value": "AutoFish"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "receiveListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/hidden/AutoTool": {
    "name": "com/veteran/hack/module/modules/hidden/AutoTool",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/hidden/AutoTool",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Automatically switch to the best tools when mining or attacking"
          },
          "name": {
            "value": "AutoTool"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "leftClickListener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "attackListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/hidden/BetterBeacons": {
    "name": "com/veteran/hack/module/modules/hidden/BetterBeacons",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/hidden/BetterBeacons",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Choose any of the 5 beacon effects regardless of beacon base height"
          },
          "name": {
            "value": "BetterBeacons"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "packetListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/hidden/BookCrash": {
    "name": "com/veteran/hack/module/modules/hidden/BookCrash",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/hidden/BookCrash",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Crashes servers by sending large packets"
          },
          "name": {
            "value": "BookCrash"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/hidden/Capes": {
    "name": "com/veteran/hack/module/modules/hidden/Capes",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/hidden/Capes",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Controls the display of KAMI Blue capes"
          },
          "name": {
            "value": "Capes"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/hidden/ColourSign": {
    "name": "com/veteran/hack/module/modules/hidden/ColourSign",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/hidden/ColourSign",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Allows ingame colouring of text on signs"
          },
          "name": {
            "value": "ColourSign"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "eventListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/hidden/ConsoleSpam": {
    "name": "com/veteran/hack/module/modules/hidden/ConsoleSpam",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/hidden/ConsoleSpam",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Spams Spigot consoles by sending invalid UpdateSign packets"
          },
          "name": {
            "value": "ConsoleSpam"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "sendListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/hidden/FakeGamemode": {
    "name": "com/veteran/hack/module/modules/hidden/FakeGamemode",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/hidden/FakeGamemode",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Fakes your current gamemode client side"
          },
          "name": {
            "value": "FakeGamemode"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/hidden/FakeVanillaClient": {
    "name": "com/veteran/hack/module/modules/hidden/FakeVanillaClient",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/hidden/FakeVanillaClient",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Fakes a modless client when connecting"
          },
          "name": {
            "value": "FakeVanillaClient"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/hidden/FixGui": {
    "name": "com/veteran/hack/module/modules/hidden/FixGui",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/hidden/FixGui",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Moves GUI elements back on screen"
          },
          "name": {
            "value": "Hidden:FixGui"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/hidden/Pull32k": {
    "name": "com/veteran/hack/module/modules/hidden/Pull32k",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/hidden/Pull32k",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Pulls 32ks out of hoppers automagically"
          },
          "name": {
            "value": "Hidden:Pull32k"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/hidden/SkinFlicker": {
    "name": "com/veteran/hack/module/modules/hidden/SkinFlicker",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/hidden/SkinFlicker",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Toggle your skin layers rapidly for a cool skin effect"
          },
          "name": {
            "value": "SkinFlicker"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/hidden/Teleport": {
    "name": "com/veteran/hack/module/modules/hidden/Teleport",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/hidden/Teleport",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Library for teleport command"
          },
          "name": {
            "value": "Teleport"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/hidden/XCarry": {
    "name": "com/veteran/hack/module/modules/hidden/XCarry",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/hidden/XCarry",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Store items in crafting slots"
          },
          "name": {
            "value": "XCarry"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "l"
      }
    ]
  },
  "com/veteran/hack/module/modules/misc/AntiAFK": {
    "name": "com/veteran/hack/module/modules/misc/AntiAFK",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/misc/AntiAFK",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/MISC"
          },
          "description": {
            "value": "Prevents being kicked for AFK"
          },
          "name": {
            "value": "AntiAFK"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/misc/AutoReconnect": {
    "name": "com/veteran/hack/module/modules/misc/AutoReconnect",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/misc/AutoReconnect",
        "values": {
          "alwaysListening": {
            "type": "BOOL",
            "value": "true"
          },
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/MISC"
          },
          "description": {
            "value": "Automatically reconnects after being disconnected"
          },
          "name": {
            "value": "AutoReconnect"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "closedListener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "displayedListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/misc/AutoRespawn": {
    "name": "com/veteran/hack/module/modules/misc/AutoRespawn",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/misc/AutoRespawn",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/MISC"
          },
          "description": {
            "value": "Automatically respawn after dying"
          },
          "name": {
            "value": "AutoRespawn"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "listener"
      }
    ]
  },
  "com/veteran/hack/module/modules/misc/AutoSpawner": {
    "name": "com/veteran/hack/module/modules/misc/AutoSpawner",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/misc/AutoSpawner",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/MISC"
          },
          "description": {
            "value": "Automatically spawns Withers, Iron Golems and Snowmen"
          },
          "name": {
            "value": "AutoSpawner"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/misc/CameraClip": {
    "name": "com/veteran/hack/module/modules/misc/CameraClip",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/misc/CameraClip",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/MISC"
          },
          "description": {
            "value": "Allows your 3rd person camera to pass through blocks"
          },
          "name": {
            "value": "CameraClip"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/misc/DiscordSettings": {
    "name": "com/veteran/hack/module/modules/misc/DiscordSettings",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/misc/DiscordSettings",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/MISC"
          },
          "description": {
            "value": "Discord Rich Presence"
          },
          "name": {
            "value": "DiscordSettings"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/misc/MidClickFriends": {
    "name": "com/veteran/hack/module/modules/misc/MidClickFriends",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/misc/MidClickFriends",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/MISC"
          },
          "description": {
            "value": "Middle click players to friend or unfriend them"
          },
          "name": {
            "value": "MidClickFriends"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "mouseListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/misc/NoPacketKick": {
    "name": "com/veteran/hack/module/modules/misc/NoPacketKick",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/misc/NoPacketKick",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/MISC"
          },
          "description": {
            "value": "Prevent large packets from kicking you"
          },
          "name": {
            "value": "NoPacketKick"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/misc/NoSoundLag": {
    "name": "com/veteran/hack/module/modules/misc/NoSoundLag",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/misc/NoSoundLag",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/MISC"
          },
          "description": {
            "value": "Prevents lag caused by sound machines"
          },
          "name": {
            "value": "NoSoundLag"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "receiveListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/movement/AntiHunger": {
    "name": "com/veteran/hack/module/modules/movement/AntiHunger",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/movement/AntiHunger",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Reduces hunger lost when moving around"
          },
          "name": {
            "value": "AntiHunger"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "packetListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/movement/AutoJump": {
    "name": "com/veteran/hack/module/modules/movement/AutoJump",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/movement/AutoJump",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Automatically jumps if possible"
          },
          "name": {
            "value": "AutoJump"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/movement/AutoWalk": {
    "name": "com/veteran/hack/module/modules/movement/AutoWalk",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/movement/AutoWalk",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Automatically walks forward"
          },
          "name": {
            "value": "AutoWalk"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "inputUpdateEventListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/movement/DVDStrafe": {
    "name": "com/veteran/hack/module/modules/movement/DVDStrafe",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/movement/DVDStrafe",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/MOVEMENT"
          },
          "description": {
            "value": "2b2t strafe bypass ezpz // found and coded by polymer"
          },
          "name": {
            "value": "Strafe"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/movement/ElytraFlight": {
    "name": "com/veteran/hack/module/modules/movement/ElytraFlight",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/movement/ElytraFlight",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/MOVEMENT"
          },
          "description": {
            "value": "Modifies elytras to fly at custom velocities and fall speeds"
          },
          "name": {
            "value": "ElytraFlight"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "sendListener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "receiveListener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "playerTravelListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/movement/EntitySpeed": {
    "name": "com/veteran/hack/module/modules/movement/EntitySpeed",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/movement/EntitySpeed",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Abuse client-sided movement to shape sound barrier breaking rideables"
          },
          "name": {
            "value": "EntitySpeed"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/movement/Flight": {
    "name": "com/veteran/hack/module/modules/movement/Flight",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/movement/Flight",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Makes the player fly"
          },
          "name": {
            "value": "Flight"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/movement/IceSpeed": {
    "name": "com/veteran/hack/module/modules/movement/IceSpeed",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/movement/IceSpeed",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Changes how slippery ice is"
          },
          "name": {
            "value": "IceSpeed"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/movement/Jesus": {
    "name": "com/veteran/hack/module/modules/movement/Jesus",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/movement/Jesus",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Allows you to walk on water"
          },
          "name": {
            "value": "Jesus"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "addCollisionBoxToListEventListener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "packetEventSendListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/movement/NoSlowDown": {
    "name": "com/veteran/hack/module/modules/movement/NoSlowDown",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/movement/NoSlowDown",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Prevents being slowed down when using an item or going through cobwebs"
          },
          "name": {
            "value": "NoSlowDown"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "eventListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/movement/SafeWalk": {
    "name": "com/veteran/hack/module/modules/movement/SafeWalk",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/movement/SafeWalk",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Keeps you from walking off edges"
          },
          "name": {
            "value": "SafeWalk"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/movement/Sprint": {
    "name": "com/veteran/hack/module/modules/movement/Sprint",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/movement/Sprint",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/MOVEMENT"
          },
          "description": {
            "value": "Automatically makes the player sprint"
          },
          "name": {
            "value": "Sprint"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/movement/TimerSpeed": {
    "name": "com/veteran/hack/module/modules/movement/TimerSpeed",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/movement/TimerSpeed",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Automatically change your timer to go fast"
          },
          "name": {
            "value": "TimerSpeed"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/movement/Velocity": {
    "name": "com/veteran/hack/module/modules/movement/Velocity",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/movement/Velocity",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/MOVEMENT"
          },
          "description": {
            "value": "Modify knockback impact"
          },
          "name": {
            "value": "Velocity"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "packetEventListener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "entityCollisionListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/player/AntiForceLook": {
    "name": "com/veteran/hack/module/modules/player/AntiForceLook",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/player/AntiForceLook",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Stops server packets from turning your head"
          },
          "name": {
            "value": "AntiForceLook"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "receiveListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/player/AutoArmour": {
    "name": "com/veteran/hack/module/modules/player/AutoArmour",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/player/AutoArmour",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/PLAYER"
          },
          "description": {
            "value": "Automatically equips armour"
          },
          "name": {
            "value": "AutoArmour"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/player/AutoEat": {
    "name": "com/veteran/hack/module/modules/player/AutoEat",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/player/AutoEat",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Automatically eat when hungry"
          },
          "name": {
            "value": "AutoEat"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/player/Blink": {
    "name": "com/veteran/hack/module/modules/player/Blink",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/player/Blink",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Cancels server side packets"
          },
          "name": {
            "value": "Blink"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "listener"
      }
    ]
  },
  "com/veteran/hack/module/modules/player/EndTeleport": {
    "name": "com/veteran/hack/module/modules/player/EndTeleport",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/player/EndTeleport",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/PLAYER"
          },
          "description": {
            "value": "Allows for teleportation when going through end portals"
          },
          "name": {
            "value": "EndTeleport"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "receiveListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/player/Fastbreak": {
    "name": "com/veteran/hack/module/modules/player/Fastbreak",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/player/Fastbreak",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Nullifies block hit delay"
          },
          "name": {
            "value": "Fastbreak"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/player/Freecam": {
    "name": "com/veteran/hack/module/modules/player/Freecam",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/player/Freecam",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/PLAYER"
          },
          "description": {
            "value": "Leave your body and trascend into the realm of the gods"
          },
          "name": {
            "value": "Freecam"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "moveListener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "pushListener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "sendListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/player/LiquidInteract": {
    "name": "com/veteran/hack/module/modules/player/LiquidInteract",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/player/LiquidInteract",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/PLAYER"
          },
          "description": {
            "value": "Place blocks on liquid!"
          },
          "name": {
            "value": "LiquidInteract"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/player/NoBreakAnimation": {
    "name": "com/veteran/hack/module/modules/player/NoBreakAnimation",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/player/NoBreakAnimation",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/PLAYER"
          },
          "description": {
            "value": "Prevents block break animation server side"
          },
          "name": {
            "value": "NoBreakAnimation"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "listener"
      }
    ]
  },
  "com/veteran/hack/module/modules/player/NoEntityTrace": {
    "name": "com/veteran/hack/module/modules/player/NoEntityTrace",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/player/NoEntityTrace",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/PLAYER"
          },
          "description": {
            "value": "Blocks entities from stopping you from mining"
          },
          "name": {
            "value": "NoEntityTrace"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/player/NoFall": {
    "name": "com/veteran/hack/module/modules/player/NoFall",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/player/NoFall",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Prevents fall damage"
          },
          "name": {
            "value": "NoFall"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "sendListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/player/NoSwing": {
    "name": "com/veteran/hack/module/modules/player/NoSwing",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/player/NoSwing",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Cancels server and client swinging packets"
          },
          "name": {
            "value": "NoSwing"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "listener"
      }
    ]
  },
  "com/veteran/hack/module/modules/player/PitchLock": {
    "name": "com/veteran/hack/module/modules/player/PitchLock",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/player/PitchLock",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Locks your camera pitch"
          },
          "name": {
            "value": "PitchLock"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/player/PortalGodMode": {
    "name": "com/veteran/hack/module/modules/player/PortalGodMode",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/player/PortalGodMode",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/PLAYER"
          },
          "description": {
            "value": "Don\u0027t take damage in portals"
          },
          "name": {
            "value": "PortalGodMode"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "listener"
      }
    ]
  },
  "com/veteran/hack/module/modules/player/Scaffold": {
    "name": "com/veteran/hack/module/modules/player/Scaffold",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/player/Scaffold",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Places blocks under you"
          },
          "name": {
            "value": "Scaffold"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "eventListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/player/Timer": {
    "name": "com/veteran/hack/module/modules/player/Timer",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/player/Timer",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/PLAYER"
          },
          "description": {
            "value": "Changes your client tick speed"
          },
          "name": {
            "value": "Timer"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/player/TpsSync": {
    "name": "com/veteran/hack/module/modules/player/TpsSync",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/player/TpsSync",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/PLAYER"
          },
          "description": {
            "value": "Synchronizes some actions with the server TPS"
          },
          "name": {
            "value": "TpsSync"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/player/YawLock": {
    "name": "com/veteran/hack/module/modules/player/YawLock",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/player/YawLock",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Locks your camera yaw"
          },
          "name": {
            "value": "YawLock"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/render/ArmourHUD": {
    "name": "com/veteran/hack/module/modules/render/ArmourHUD",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/ArmourHUD",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Displays your armour and it\u0027s durability on screen"
          },
          "name": {
            "value": "ArmourHUD"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/render/BlockHighlight": {
    "name": "com/veteran/hack/module/modules/render/BlockHighlight",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/BlockHighlight",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/RENDER"
          },
          "description": {
            "value": "renders better blovk highlight for some ppl "
          },
          "name": {
            "value": "BlockHighlight"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/render/BossStack": {
    "name": "com/veteran/hack/module/modules/render/BossStack",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/BossStack",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/MISC"
          },
          "description": {
            "value": "Modify the boss health GUI to take up less space"
          },
          "name": {
            "value": "BossStack"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/render/BoxESP": {
    "name": "com/veteran/hack/module/modules/render/BoxESP",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/BoxESP",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/RENDER"
          },
          "description": {
            "value": "Draws a box around EXP Bottles and Pearls"
          },
          "name": {
            "value": "BoxESP"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/render/Brightness": {
    "name": "com/veteran/hack/module/modules/render/Brightness",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/Brightness",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/RENDER"
          },
          "description": {
            "value": "Makes everything brighter!"
          },
          "name": {
            "value": "FullBright"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/render/Chams": {
    "name": "com/veteran/hack/module/modules/render/Chams",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/Chams",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "See entities through walls"
          },
          "name": {
            "value": "Chams"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/render/ChunkFinder": {
    "name": "com/veteran/hack/module/modules/render/ChunkFinder",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/ChunkFinder",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Highlights newly generated chunks"
          },
          "name": {
            "value": "ChunkFinder"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "listener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "unloadListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/render/ESP": {
    "name": "com/veteran/hack/module/modules/render/ESP",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/ESP",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/RENDER"
          },
          "description": {
            "value": "Highlights entities"
          },
          "name": {
            "value": "ESP"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/render/ExtraTab": {
    "name": "com/veteran/hack/module/modules/render/ExtraTab",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/ExtraTab",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/RENDER"
          },
          "description": {
            "value": "Expands the player tab menu"
          },
          "name": {
            "value": "ExtraTab"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/render/EyeFinder": {
    "name": "com/veteran/hack/module/modules/render/EyeFinder",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/EyeFinder",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/RENDER"
          },
          "description": {
            "value": "Draw lines from entity\u0027s heads to where they are looking"
          },
          "name": {
            "value": "EyeFinder"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/render/HoleESP": {
    "name": "com/veteran/hack/module/modules/render/HoleESP",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/HoleESP",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/RENDER"
          },
          "description": {
            "value": "Show safe holes for crystal pvp"
          },
          "name": {
            "value": "HoleESP"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/render/Nametags": {
    "name": "com/veteran/hack/module/modules/render/Nametags",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/Nametags",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Draws descriptive nametags above entities"
          },
          "name": {
            "value": "Nametags"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/render/NoHurtCam": {
    "name": "com/veteran/hack/module/modules/render/NoHurtCam",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/NoHurtCam",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/RENDER"
          },
          "description": {
            "value": "Disables the \u0027hurt\u0027 camera effect"
          },
          "name": {
            "value": "NoHurtCam"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/render/NoRender": {
    "name": "com/veteran/hack/module/modules/render/NoRender",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/NoRender",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/RENDER"
          },
          "description": {
            "value": "Ignore entity spawn packets"
          },
          "name": {
            "value": "NoRender"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "receiveListener"
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "blockOverlayEventListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/render/Pathfind": {
    "name": "com/veteran/hack/module/modules/render/Pathfind",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/Pathfind",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "A path finder for AutoWalk"
          },
          "name": {
            "value": "Pathfind"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/render/ShulkerPreview": {
    "name": "com/veteran/hack/module/modules/render/ShulkerPreview",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/ShulkerPreview",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Previews shulkers in the game GUI"
          },
          "name": {
            "value": "ShulkerPreview"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/render/TabFriends": {
    "name": "com/veteran/hack/module/modules/render/TabFriends",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/TabFriends",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/GUI"
          },
          "description": {
            "value": "Highlights friends in the tab menu"
          },
          "name": {
            "value": "TabFriends"
          },
          "showOnArray": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$ShowOnArray;/OFF"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/render/Tracers": {
    "name": "com/veteran/hack/module/modules/render/Tracers",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/Tracers",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Draws lines to other living entities"
          },
          "name": {
            "value": "Tracers"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/render/Trajectories": {
    "name": "com/veteran/hack/module/modules/render/Trajectories",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/Trajectories",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "Draws lines to where trajectories are going to fall"
          },
          "name": {
            "value": "Trajectories"
          }
        }
      }
    ]
  },
  "com/veteran/hack/module/modules/render/XRay": {
    "name": "com/veteran/hack/module/modules/render/XRay",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/render/XRay",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/HIDDEN"
          },
          "description": {
            "value": "See through common blocks!"
          },
          "name": {
            "value": "XRay"
          }
        }
      },
      {
        "type": "CLASS",
        "name": "Lnet/minecraftforge/fml/common/Mod$EventBusSubscriber;",
        "target": "com/veteran/hack/module/modules/render/XRay",
        "values": {
          "modid": {
            "value": "vethack"
          }
        }
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "registerBlocks(Lnet/minecraftforge/event/RegistryEvent$Register;)V"
      },
      {
        "type": "METHOD",
        "name": "Lnet/minecraftforge/fml/common/eventhandler/SubscribeEvent;",
        "target": "registerItems(Lnet/minecraftforge/event/RegistryEvent$Register;)V"
      }
    ]
  },
  "com/veteran/hack/module/modules/utils/BlockData": {
    "name": "com/veteran/hack/module/modules/utils/BlockData",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/utils/BlockData",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/UTILS"
          },
          "description": {
            "value": "Right click blocks to display their data"
          },
          "name": {
            "value": "BlockData"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "mouseListener"
      }
    ]
  },
  "com/veteran/hack/module/modules/utils/EntityTools": {
    "name": "com/veteran/hack/module/modules/utils/EntityTools",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lcom/veteran/hack/module/Module$Info;",
        "target": "com/veteran/hack/module/modules/utils/EntityTools",
        "values": {
          "category": {
            "type": "ENUM",
            "value": "Lcom/veteran/hack/module/Module$Category;/UTILS"
          },
          "description": {
            "value": "Right click entities to perform actions on them"
          },
          "name": {
            "value": "EntityTools"
          }
        }
      },
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "mouseListener"
      }
    ]
  },
  "com/veteran/hack/setting/Setting": {
    "name": "com/veteran/hack/setting/Setting",
    "interfaces": [
      "com/veteran/hack/setting/ISettingUnknown",
      "com/veteran/hack/setting/converter/Convertable"
    ]
  },
  "com/veteran/hack/util/LagCompensator": {
    "name": "com/veteran/hack/util/LagCompensator",
    "interfaces": [
      "java/util/EventListener"
    ],
    "annotations": [
      {
        "type": "FIELD",
        "name": "Lme/zero/alpine/listener/EventHandler;",
        "target": "packetEventListener"
      }
    ]
  },
  "javassist/ByteArrayClassPath": {
    "name": "javassist/ByteArrayClassPath",
    "interfaces": [
      "javassist/ClassPath"
    ]
  },
  "javassist/ClassClassPath": {
    "name": "javassist/ClassClassPath",
    "interfaces": [
      "javassist/ClassPath"
    ]
  },
  "javassist/CodeConverter$DefaultArrayAccessReplacementMethodNames": {
    "name": "javassist/CodeConverter$DefaultArrayAccessReplacementMethodNames",
    "interfaces": [
      "javassist/CodeConverter$ArrayAccessReplacementMethodNames"
    ]
  },
  "javassist/DirClassPath": {
    "name": "javassist/DirClassPath",
    "interfaces": [
      "javassist/ClassPath"
    ]
  },
  "javassist/JarClassPath": {
    "name": "javassist/JarClassPath",
    "interfaces": [
      "javassist/ClassPath"
    ]
  },
  "javassist/JarDirClassPath": {
    "name": "javassist/JarDirClassPath",
    "interfaces": [
      "javassist/ClassPath"
    ]
  },
  "javassist/JarDirClassPath$1": {
    "name": "javassist/JarDirClassPath$1",
    "interfaces": [
      "java/io/FilenameFilter"
    ]
  },
  "javassist/LoaderClassPath": {
    "name": "javassist/LoaderClassPath",
    "interfaces": [
      "javassist/ClassPath"
    ]
  },
  "javassist/SerialVersionUID$1": {
    "name": "javassist/SerialVersionUID$1",
    "interfaces": [
      "java/util/Comparator"
    ]
  },
  "javassist/SerialVersionUID$2": {
    "name": "javassist/SerialVersionUID$2",
    "interfaces": [
      "java/util/Comparator"
    ]
  },
  "javassist/SerialVersionUID$3": {
    "name": "javassist/SerialVersionUID$3",
    "interfaces": [
      "java/util/Comparator"
    ]
  },
  "javassist/URLClassPath": {
    "name": "javassist/URLClassPath",
    "interfaces": [
      "javassist/ClassPath"
    ]
  },
  "javassist/bytecode/ByteVector": {
    "name": "javassist/bytecode/ByteVector",
    "interfaces": [
      "java/lang/Cloneable"
    ]
  },
  "javassist/bytecode/Bytecode": {
    "name": "javassist/bytecode/Bytecode",
    "interfaces": [
      "java/lang/Cloneable",
      "javassist/bytecode/Opcode"
    ]
  },
  "javassist/bytecode/CodeAnalyzer": {
    "name": "javassist/bytecode/CodeAnalyzer",
    "interfaces": [
      "javassist/bytecode/Opcode"
    ]
  },
  "javassist/bytecode/CodeAttribute": {
    "name": "javassist/bytecode/CodeAttribute",
    "interfaces": [
      "javassist/bytecode/Opcode"
    ]
  },
  "javassist/bytecode/CodeIterator": {
    "name": "javassist/bytecode/CodeIterator",
    "interfaces": [
      "javassist/bytecode/Opcode"
    ]
  },
  "javassist/bytecode/ExceptionTable": {
    "name": "javassist/bytecode/ExceptionTable",
    "interfaces": [
      "java/lang/Cloneable"
    ]
  },
  "javassist/bytecode/InstructionPrinter": {
    "name": "javassist/bytecode/InstructionPrinter",
    "interfaces": [
      "javassist/bytecode/Opcode"
    ]
  },
  "javassist/bytecode/analysis/Analyzer": {
    "name": "javassist/bytecode/analysis/Analyzer",
    "interfaces": [
      "javassist/bytecode/Opcode"
    ]
  },
  "javassist/bytecode/analysis/Executor": {
    "name": "javassist/bytecode/analysis/Executor",
    "interfaces": [
      "javassist/bytecode/Opcode"
    ]
  },
  "javassist/bytecode/analysis/SubroutineScanner": {
    "name": "javassist/bytecode/analysis/SubroutineScanner",
    "interfaces": [
      "javassist/bytecode/Opcode"
    ]
  },
  "javassist/bytecode/analysis/Util": {
    "name": "javassist/bytecode/analysis/Util",
    "interfaces": [
      "javassist/bytecode/Opcode"
    ]
  },
  "javassist/bytecode/annotation/AnnotationImpl": {
    "name": "javassist/bytecode/annotation/AnnotationImpl",
    "interfaces": [
      "java/lang/reflect/InvocationHandler"
    ]
  },
  "javassist/bytecode/stackmap/BasicBlock$Mark": {
    "name": "javassist/bytecode/stackmap/BasicBlock$Mark",
    "interfaces": [
      "java/lang/Comparable"
    ]
  },
  "javassist/bytecode/stackmap/Tracer": {
    "name": "javassist/bytecode/stackmap/Tracer",
    "interfaces": [
      "javassist/bytecode/stackmap/TypeTag"
    ]
  },
  "javassist/compiler/CodeGen": {
    "name": "javassist/compiler/CodeGen",
    "interfaces": [
      "javassist/bytecode/Opcode",
      "javassist/compiler/TokenId"
    ]
  },
  "javassist/compiler/Javac$1": {
    "name": "javassist/compiler/Javac$1",
    "interfaces": [
      "javassist/compiler/ProceedHandler"
    ]
  },
  "javassist/compiler/Javac$2": {
    "name": "javassist/compiler/Javac$2",
    "interfaces": [
      "javassist/compiler/ProceedHandler"
    ]
  },
  "javassist/compiler/Javac$3": {
    "name": "javassist/compiler/Javac$3",
    "interfaces": [
      "javassist/compiler/ProceedHandler"
    ]
  },
  "javassist/compiler/Lex": {
    "name": "javassist/compiler/Lex",
    "interfaces": [
      "javassist/compiler/TokenId"
    ]
  },
  "javassist/compiler/MemberResolver": {
    "name": "javassist/compiler/MemberResolver",
    "interfaces": [
      "javassist/compiler/TokenId"
    ]
  },
  "javassist/compiler/Parser": {
    "name": "javassist/compiler/Parser",
    "interfaces": [
      "javassist/compiler/TokenId"
    ]
  },
  "javassist/compiler/TypeChecker": {
    "name": "javassist/compiler/TypeChecker",
    "interfaces": [
      "javassist/bytecode/Opcode",
      "javassist/compiler/TokenId"
    ]
  },
  "javassist/compiler/ast/ASTree": {
    "name": "javassist/compiler/ast/ASTree",
    "interfaces": [
      "java/io/Serializable"
    ]
  },
  "javassist/compiler/ast/CastExpr": {
    "name": "javassist/compiler/ast/CastExpr",
    "interfaces": [
      "javassist/compiler/TokenId"
    ]
  },
  "javassist/compiler/ast/Declarator": {
    "name": "javassist/compiler/ast/Declarator",
    "interfaces": [
      "javassist/compiler/TokenId"
    ]
  },
  "javassist/compiler/ast/Expr": {
    "name": "javassist/compiler/ast/Expr",
    "interfaces": [
      "javassist/compiler/TokenId"
    ]
  },
  "javassist/compiler/ast/NewExpr": {
    "name": "javassist/compiler/ast/NewExpr",
    "interfaces": [
      "javassist/compiler/TokenId"
    ]
  },
  "javassist/compiler/ast/Stmnt": {
    "name": "javassist/compiler/ast/Stmnt",
    "interfaces": [
      "javassist/compiler/TokenId"
    ]
  },
  "javassist/convert/Transformer": {
    "name": "javassist/convert/Transformer",
    "interfaces": [
      "javassist/bytecode/Opcode"
    ]
  },
  "javassist/expr/Cast$ProceedForCast": {
    "name": "javassist/expr/Cast$ProceedForCast",
    "interfaces": [
      "javassist/compiler/ProceedHandler"
    ]
  },
  "javassist/expr/Expr": {
    "name": "javassist/expr/Expr",
    "interfaces": [
      "javassist/bytecode/Opcode"
    ]
  },
  "javassist/expr/FieldAccess$ProceedForRead": {
    "name": "javassist/expr/FieldAccess$ProceedForRead",
    "interfaces": [
      "javassist/compiler/ProceedHandler"
    ]
  },
  "javassist/expr/FieldAccess$ProceedForWrite": {
    "name": "javassist/expr/FieldAccess$ProceedForWrite",
    "interfaces": [
      "javassist/compiler/ProceedHandler"
    ]
  },
  "javassist/expr/Instanceof$ProceedForInstanceof": {
    "name": "javassist/expr/Instanceof$ProceedForInstanceof",
    "interfaces": [
      "javassist/compiler/ProceedHandler"
    ]
  },
  "javassist/expr/NewArray$ProceedForArray": {
    "name": "javassist/expr/NewArray$ProceedForArray",
    "interfaces": [
      "javassist/compiler/ProceedHandler"
    ]
  },
  "javassist/expr/NewExpr$ProceedForNew": {
    "name": "javassist/expr/NewExpr$ProceedForNew",
    "interfaces": [
      "javassist/compiler/ProceedHandler"
    ]
  },
  "javassist/scopedpool/ScopedClassPoolFactoryImpl": {
    "name": "javassist/scopedpool/ScopedClassPoolFactoryImpl",
    "interfaces": [
      "javassist/scopedpool/ScopedClassPoolFactory"
    ]
  },
  "javassist/scopedpool/ScopedClassPoolRepositoryImpl": {
    "name": "javassist/scopedpool/ScopedClassPoolRepositoryImpl",
    "interfaces": [
      "javassist/scopedpool/ScopedClassPoolRepository"
    ]
  },
  "javassist/scopedpool/SoftValueHashMap": {
    "name": "javassist/scopedpool/SoftValueHashMap",
    "interfaces": [
      "java/util/Map"
    ]
  },
  "javassist/tools/reflect/ClassMetaobject": {
    "name": "javassist/tools/reflect/ClassMetaobject",
    "interfaces": [
      "java/io/Serializable"
    ]
  },
  "javassist/tools/reflect/Metaobject": {
    "name": "javassist/tools/reflect/Metaobject",
    "interfaces": [
      "java/io/Serializable"
    ]
  },
  "javassist/tools/reflect/Reflection": {
    "name": "javassist/tools/reflect/Reflection",
    "interfaces": [
      "javassist/Translator"
    ]
  },
  "javassist/tools/rmi/ObjectImporter": {
    "name": "javassist/tools/rmi/ObjectImporter",
    "interfaces": [
      "java/io/Serializable"
    ]
  },
  "javassist/tools/rmi/RemoteRef": {
    "name": "javassist/tools/rmi/RemoteRef",
    "interfaces": [
      "java/io/Serializable"
    ]
  },
  "javassist/tools/rmi/StubGenerator": {
    "name": "javassist/tools/rmi/StubGenerator",
    "interfaces": [
      "javassist/Translator"
    ]
  },
  "javassist/util/proxy/ProxyFactory$1": {
    "name": "javassist/util/proxy/ProxyFactory$1",
    "interfaces": [
      "javassist/util/proxy/ProxyFactory$ClassLoaderProvider"
    ]
  },
  "javassist/util/proxy/ProxyFactory$2": {
    "name": "javassist/util/proxy/ProxyFactory$2",
    "interfaces": [
      "javassist/util/proxy/ProxyFactory$UniqueName"
    ]
  },
  "javassist/util/proxy/ProxyFactory$3": {
    "name": "javassist/util/proxy/ProxyFactory$3",
    "interfaces": [
      "java/util/Comparator"
    ]
  },
  "javassist/util/proxy/ProxyObject": {
    "name": "javassist/util/proxy/ProxyObject",
    "interfaces": [
      "javassist/util/proxy/Proxy"
    ]
  },
  "javassist/util/proxy/RuntimeSupport$DefaultMethodHandler": {
    "name": "javassist/util/proxy/RuntimeSupport$DefaultMethodHandler",
    "interfaces": [
      "javassist/util/proxy/MethodHandler",
      "java/io/Serializable"
    ]
  },
  "javassist/util/proxy/SecurityActions$1": {
    "name": "javassist/util/proxy/SecurityActions$1",
    "interfaces": [
      "java/security/PrivilegedAction"
    ]
  },
  "javassist/util/proxy/SecurityActions$2": {
    "name": "javassist/util/proxy/SecurityActions$2",
    "interfaces": [
      "java/security/PrivilegedAction"
    ]
  },
  "javassist/util/proxy/SecurityActions$3": {
    "name": "javassist/util/proxy/SecurityActions$3",
    "interfaces": [
      "java/security/PrivilegedExceptionAction"
    ]
  },
  "javassist/util/proxy/SecurityActions$4": {
    "name": "javassist/util/proxy/SecurityActions$4",
    "interfaces": [
      "java/security/PrivilegedExceptionAction"
    ]
  },
  "javassist/util/proxy/SecurityActions$5": {
    "name": "javassist/util/proxy/SecurityActions$5",
    "interfaces": [
      "java/security/PrivilegedExceptionAction"
    ]
  },
  "javassist/util/proxy/SecurityActions$6": {
    "name": "javassist/util/proxy/SecurityActions$6",
    "interfaces": [
      "java/security/PrivilegedAction"
    ]
  },
  "javassist/util/proxy/SecurityActions$7": {
    "name": "javassist/util/proxy/SecurityActions$7",
    "interfaces": [
      "java/security/PrivilegedExceptionAction"
    ]
  },
  "javassist/util/proxy/SecurityActions$8": {
    "name": "javassist/util/proxy/SecurityActions$8",
    "interfaces": [
      "java/security/PrivilegedExceptionAction"
    ]
  },
  "javassist/util/proxy/SerializedProxy": {
    "name": "javassist/util/proxy/SerializedProxy",
    "interfaces": [
      "java/io/Serializable"
    ]
  },
  "javassist/util/proxy/SerializedProxy$1": {
    "name": "javassist/util/proxy/SerializedProxy$1",
    "interfaces": [
      "java/security/PrivilegedExceptionAction"
    ]
  },
  "me/zero/alpine/EventManager": {
    "name": "me/zero/alpine/EventManager",
    "interfaces": [
      "me/zero/alpine/EventBus"
    ]
  },
  "me/zero/alpine/listener/EventHandler": {
    "name": "me/zero/alpine/listener/EventHandler",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "me/zero/alpine/listener/Listener": {
    "name": "me/zero/alpine/listener/Listener",
    "interfaces": [
      "me/zero/alpine/listener/EventHook"
    ]
  },
  "net/jodah/typetools/TypeResolver$1": {
    "name": "net/jodah/typetools/TypeResolver$1",
    "interfaces": [
      "java/security/PrivilegedExceptionAction"
    ]
  },
  "org/reflections/adapters/JavaReflectionAdapter": {
    "name": "org/reflections/adapters/JavaReflectionAdapter",
    "interfaces": [
      "org/reflections/adapters/MetadataAdapter"
    ]
  },
  "org/reflections/adapters/JavassistAdapter": {
    "name": "org/reflections/adapters/JavassistAdapter",
    "interfaces": [
      "org/reflections/adapters/MetadataAdapter"
    ]
  },
  "org/reflections/scanners/AbstractScanner": {
    "name": "org/reflections/scanners/AbstractScanner",
    "interfaces": [
      "org/reflections/scanners/Scanner"
    ]
  },
  "org/reflections/serializers/JavaCodeSerializer": {
    "name": "org/reflections/serializers/JavaCodeSerializer",
    "interfaces": [
      "org/reflections/serializers/Serializer"
    ]
  },
  "org/reflections/serializers/JsonSerializer": {
    "name": "org/reflections/serializers/JsonSerializer",
    "interfaces": [
      "org/reflections/serializers/Serializer"
    ]
  },
  "org/reflections/serializers/XmlSerializer": {
    "name": "org/reflections/serializers/XmlSerializer",
    "interfaces": [
      "org/reflections/serializers/Serializer"
    ]
  },
  "org/reflections/util/ConfigurationBuilder": {
    "name": "org/reflections/util/ConfigurationBuilder",
    "interfaces": [
      "org/reflections/Configuration"
    ]
  },
  "org/reflections/util/ConfigurationBuilder$1": {
    "name": "org/reflections/util/ConfigurationBuilder$1",
    "interfaces": [
      "java/util/concurrent/ThreadFactory"
    ]
  },
  "org/reflections/util/FilterBuilder": {
    "name": "org/reflections/util/FilterBuilder",
    "interfaces": [
      "java/util/function/Predicate"
    ]
  },
  "org/reflections/util/FilterBuilder$Matcher": {
    "name": "org/reflections/util/FilterBuilder$Matcher",
    "interfaces": [
      "java/util/function/Predicate"
    ]
  },
  "org/reflections/vfs/JarInputDir": {
    "name": "org/reflections/vfs/JarInputDir",
    "interfaces": [
      "org/reflections/vfs/Vfs$Dir"
    ]
  },
  "org/reflections/vfs/JarInputDir$1": {
    "name": "org/reflections/vfs/JarInputDir$1",
    "interfaces": [
      "java/util/Iterator"
    ]
  },
  "org/reflections/vfs/JarInputFile": {
    "name": "org/reflections/vfs/JarInputFile",
    "interfaces": [
      "org/reflections/vfs/Vfs$File"
    ]
  },
  "org/reflections/vfs/SystemDir": {
    "name": "org/reflections/vfs/SystemDir",
    "interfaces": [
      "org/reflections/vfs/Vfs$Dir"
    ]
  },
  "org/reflections/vfs/SystemFile": {
    "name": "org/reflections/vfs/SystemFile",
    "interfaces": [
      "org/reflections/vfs/Vfs$File"
    ]
  },
  "org/reflections/vfs/UrlTypeVFS": {
    "name": "org/reflections/vfs/UrlTypeVFS",
    "interfaces": [
      "org/reflections/vfs/Vfs$UrlType"
    ]
  },
  "org/reflections/vfs/Vfs$DefaultUrlTypes": {
    "name": "org/reflections/vfs/Vfs$DefaultUrlTypes",
    "interfaces": [
      "org/reflections/vfs/Vfs$UrlType"
    ]
  },
  "org/reflections/vfs/ZipDir": {
    "name": "org/reflections/vfs/ZipDir",
    "interfaces": [
      "org/reflections/vfs/Vfs$Dir"
    ]
  },
  "org/reflections/vfs/ZipFile": {
    "name": "org/reflections/vfs/ZipFile",
    "interfaces": [
      "org/reflections/vfs/Vfs$File"
    ]
  },
  "org/spongepowered/asm/bridge/RemapperAdapter": {
    "name": "org/spongepowered/asm/bridge/RemapperAdapter",
    "interfaces": [
      "org/spongepowered/asm/mixin/extensibility/IRemapper",
      "org/spongepowered/asm/util/ObfuscationUtil$IClassRemapper"
    ]
  },
  "org/spongepowered/asm/launch/MixinTweaker": {
    "name": "org/spongepowered/asm/launch/MixinTweaker",
    "interfaces": [
      "net/minecraft/launchwrapper/ITweaker"
    ]
  },
  "org/spongepowered/asm/launch/platform/MixinPlatformAgentAbstract": {
    "name": "org/spongepowered/asm/launch/platform/MixinPlatformAgentAbstract",
    "interfaces": [
      "org/spongepowered/asm/launch/platform/IMixinPlatformAgent"
    ]
  },
  "org/spongepowered/asm/lib/tree/InsnList$InsnListIterator": {
    "name": "org/spongepowered/asm/lib/tree/InsnList$InsnListIterator",
    "interfaces": [
      "java/util/ListIterator"
    ]
  },
  "org/spongepowered/asm/lib/tree/analysis/Analyzer": {
    "name": "org/spongepowered/asm/lib/tree/analysis/Analyzer",
    "interfaces": [
      "org/spongepowered/asm/lib/Opcodes"
    ]
  },
  "org/spongepowered/asm/lib/tree/analysis/BasicInterpreter": {
    "name": "org/spongepowered/asm/lib/tree/analysis/BasicInterpreter",
    "interfaces": [
      "org/spongepowered/asm/lib/Opcodes"
    ]
  },
  "org/spongepowered/asm/lib/tree/analysis/BasicValue": {
    "name": "org/spongepowered/asm/lib/tree/analysis/BasicValue",
    "interfaces": [
      "org/spongepowered/asm/lib/tree/analysis/Value"
    ]
  },
  "org/spongepowered/asm/lib/tree/analysis/SmallSet": {
    "name": "org/spongepowered/asm/lib/tree/analysis/SmallSet",
    "interfaces": [
      "java/util/Iterator"
    ]
  },
  "org/spongepowered/asm/lib/tree/analysis/SourceInterpreter": {
    "name": "org/spongepowered/asm/lib/tree/analysis/SourceInterpreter",
    "interfaces": [
      "org/spongepowered/asm/lib/Opcodes"
    ]
  },
  "org/spongepowered/asm/lib/tree/analysis/SourceValue": {
    "name": "org/spongepowered/asm/lib/tree/analysis/SourceValue",
    "interfaces": [
      "org/spongepowered/asm/lib/tree/analysis/Value"
    ]
  },
  "org/spongepowered/asm/mixin/Debug": {
    "name": "org/spongepowered/asm/mixin/Debug",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/Dynamic": {
    "name": "org/spongepowered/asm/mixin/Dynamic",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/EnvironmentStateTweaker": {
    "name": "org/spongepowered/asm/mixin/EnvironmentStateTweaker",
    "interfaces": [
      "net/minecraft/launchwrapper/ITweaker"
    ]
  },
  "org/spongepowered/asm/mixin/Final": {
    "name": "org/spongepowered/asm/mixin/Final",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/Implements": {
    "name": "org/spongepowered/asm/mixin/Implements",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/Interface": {
    "name": "org/spongepowered/asm/mixin/Interface",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/Intrinsic": {
    "name": "org/spongepowered/asm/mixin/Intrinsic",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/Mixin": {
    "name": "org/spongepowered/asm/mixin/Mixin",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/MixinEnvironment": {
    "name": "org/spongepowered/asm/mixin/MixinEnvironment",
    "interfaces": [
      "org/spongepowered/asm/util/ITokenProvider"
    ]
  },
  "org/spongepowered/asm/mixin/MixinEnvironment$TokenProviderWrapper": {
    "name": "org/spongepowered/asm/mixin/MixinEnvironment$TokenProviderWrapper",
    "interfaces": [
      "java/lang/Comparable"
    ]
  },
  "org/spongepowered/asm/mixin/Mutable": {
    "name": "org/spongepowered/asm/mixin/Mutable",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/Overwrite": {
    "name": "org/spongepowered/asm/mixin/Overwrite",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/Pseudo": {
    "name": "org/spongepowered/asm/mixin/Pseudo",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/Shadow": {
    "name": "org/spongepowered/asm/mixin/Shadow",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/SoftOverride": {
    "name": "org/spongepowered/asm/mixin/SoftOverride",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/Unique": {
    "name": "org/spongepowered/asm/mixin/Unique",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/gen/Accessor": {
    "name": "org/spongepowered/asm/mixin/gen/Accessor",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/gen/Invoker": {
    "name": "org/spongepowered/asm/mixin/gen/Invoker",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/injection/At": {
    "name": "org/spongepowered/asm/mixin/injection/At",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/injection/Coerce": {
    "name": "org/spongepowered/asm/mixin/injection/Coerce",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/injection/Constant": {
    "name": "org/spongepowered/asm/mixin/injection/Constant",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/injection/Group": {
    "name": "org/spongepowered/asm/mixin/injection/Group",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/injection/Inject": {
    "name": "org/spongepowered/asm/mixin/injection/Inject",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/injection/InjectionPoint$AtCode": {
    "name": "org/spongepowered/asm/mixin/injection/InjectionPoint$AtCode",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/injection/ModifyArg": {
    "name": "org/spongepowered/asm/mixin/injection/ModifyArg",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/injection/ModifyArgs": {
    "name": "org/spongepowered/asm/mixin/injection/ModifyArgs",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/injection/ModifyConstant": {
    "name": "org/spongepowered/asm/mixin/injection/ModifyConstant",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/injection/ModifyVariable": {
    "name": "org/spongepowered/asm/mixin/injection/ModifyVariable",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/injection/Redirect": {
    "name": "org/spongepowered/asm/mixin/injection/Redirect",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/injection/Slice": {
    "name": "org/spongepowered/asm/mixin/injection/Slice",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/injection/Surrogate": {
    "name": "org/spongepowered/asm/mixin/injection/Surrogate",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/injection/callback/CallbackInfo": {
    "name": "org/spongepowered/asm/mixin/injection/callback/CallbackInfo",
    "interfaces": [
      "org/spongepowered/asm/mixin/injection/callback/Cancellable"
    ]
  },
  "org/spongepowered/asm/mixin/injection/code/ISliceContext": {
    "name": "org/spongepowered/asm/mixin/injection/code/ISliceContext",
    "interfaces": [
      "org/spongepowered/asm/mixin/injection/IInjectionPointContext"
    ]
  },
  "org/spongepowered/asm/mixin/injection/code/MethodSlice$InsnListSlice$SliceIterator": {
    "name": "org/spongepowered/asm/mixin/injection/code/MethodSlice$InsnListSlice$SliceIterator",
    "interfaces": [
      "java/util/ListIterator"
    ]
  },
  "org/spongepowered/asm/mixin/injection/invoke/arg/ArgsClassGenerator": {
    "name": "org/spongepowered/asm/mixin/injection/invoke/arg/ArgsClassGenerator",
    "interfaces": [
      "org/spongepowered/asm/mixin/transformer/ext/IClassGenerator"
    ]
  },
  "org/spongepowered/asm/mixin/injection/modify/AfterStoreLocal": {
    "name": "org/spongepowered/asm/mixin/injection/modify/AfterStoreLocal",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/injection/InjectionPoint$AtCode;",
        "target": "org/spongepowered/asm/mixin/injection/modify/AfterStoreLocal",
        "value": {
          "value": "STORE"
        }
      }
    ]
  },
  "org/spongepowered/asm/mixin/injection/modify/BeforeLoadLocal": {
    "name": "org/spongepowered/asm/mixin/injection/modify/BeforeLoadLocal",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/injection/InjectionPoint$AtCode;",
        "target": "org/spongepowered/asm/mixin/injection/modify/BeforeLoadLocal",
        "value": {
          "value": "LOAD"
        }
      }
    ]
  },
  "org/spongepowered/asm/mixin/injection/modify/LocalVariableDiscriminator$Context": {
    "name": "org/spongepowered/asm/mixin/injection/modify/LocalVariableDiscriminator$Context",
    "interfaces": [
      "org/spongepowered/asm/util/PrettyPrinter$IPrettyPrintable"
    ]
  },
  "org/spongepowered/asm/mixin/injection/points/AfterInvoke": {
    "name": "org/spongepowered/asm/mixin/injection/points/AfterInvoke",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/injection/InjectionPoint$AtCode;",
        "target": "org/spongepowered/asm/mixin/injection/points/AfterInvoke",
        "value": {
          "value": "INVOKE_ASSIGN"
        }
      }
    ]
  },
  "org/spongepowered/asm/mixin/injection/points/BeforeConstant": {
    "name": "org/spongepowered/asm/mixin/injection/points/BeforeConstant",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/injection/InjectionPoint$AtCode;",
        "target": "org/spongepowered/asm/mixin/injection/points/BeforeConstant",
        "value": {
          "value": "CONSTANT"
        }
      }
    ]
  },
  "org/spongepowered/asm/mixin/injection/points/BeforeFieldAccess": {
    "name": "org/spongepowered/asm/mixin/injection/points/BeforeFieldAccess",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/injection/InjectionPoint$AtCode;",
        "target": "org/spongepowered/asm/mixin/injection/points/BeforeFieldAccess",
        "value": {
          "value": "FIELD"
        }
      }
    ]
  },
  "org/spongepowered/asm/mixin/injection/points/BeforeFinalReturn": {
    "name": "org/spongepowered/asm/mixin/injection/points/BeforeFinalReturn",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/injection/InjectionPoint$AtCode;",
        "target": "org/spongepowered/asm/mixin/injection/points/BeforeFinalReturn",
        "value": {
          "value": "TAIL"
        }
      }
    ]
  },
  "org/spongepowered/asm/mixin/injection/points/BeforeInvoke": {
    "name": "org/spongepowered/asm/mixin/injection/points/BeforeInvoke",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/injection/InjectionPoint$AtCode;",
        "target": "org/spongepowered/asm/mixin/injection/points/BeforeInvoke",
        "value": {
          "value": "INVOKE"
        }
      }
    ]
  },
  "org/spongepowered/asm/mixin/injection/points/BeforeNew": {
    "name": "org/spongepowered/asm/mixin/injection/points/BeforeNew",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/injection/InjectionPoint$AtCode;",
        "target": "org/spongepowered/asm/mixin/injection/points/BeforeNew",
        "value": {
          "value": "NEW"
        }
      }
    ]
  },
  "org/spongepowered/asm/mixin/injection/points/BeforeReturn": {
    "name": "org/spongepowered/asm/mixin/injection/points/BeforeReturn",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/injection/InjectionPoint$AtCode;",
        "target": "org/spongepowered/asm/mixin/injection/points/BeforeReturn",
        "value": {
          "value": "RETURN"
        }
      }
    ]
  },
  "org/spongepowered/asm/mixin/injection/points/BeforeStringInvoke": {
    "name": "org/spongepowered/asm/mixin/injection/points/BeforeStringInvoke",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/injection/InjectionPoint$AtCode;",
        "target": "org/spongepowered/asm/mixin/injection/points/BeforeStringInvoke",
        "value": {
          "value": "INVOKE_STRING"
        }
      }
    ]
  },
  "org/spongepowered/asm/mixin/injection/points/JumpInsnPoint": {
    "name": "org/spongepowered/asm/mixin/injection/points/JumpInsnPoint",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/injection/InjectionPoint$AtCode;",
        "target": "org/spongepowered/asm/mixin/injection/points/JumpInsnPoint",
        "value": {
          "value": "JUMP"
        }
      }
    ]
  },
  "org/spongepowered/asm/mixin/injection/points/MethodHead": {
    "name": "org/spongepowered/asm/mixin/injection/points/MethodHead",
    "annotations": [
      {
        "type": "CLASS",
        "name": "Lorg/spongepowered/asm/mixin/injection/InjectionPoint$AtCode;",
        "target": "org/spongepowered/asm/mixin/injection/points/MethodHead",
        "value": {
          "value": "HEAD"
        }
      }
    ]
  },
  "org/spongepowered/asm/mixin/injection/struct/InjectionInfo": {
    "name": "org/spongepowered/asm/mixin/injection/struct/InjectionInfo",
    "interfaces": [
      "org/spongepowered/asm/mixin/injection/code/ISliceContext"
    ]
  },
  "org/spongepowered/asm/mixin/injection/struct/InjectionNodes$InjectionNode": {
    "name": "org/spongepowered/asm/mixin/injection/struct/InjectionNodes$InjectionNode",
    "interfaces": [
      "java/lang/Comparable"
    ]
  },
  "org/spongepowered/asm/mixin/injection/struct/Target": {
    "name": "org/spongepowered/asm/mixin/injection/struct/Target",
    "interfaces": [
      "java/lang/Comparable",
      "java/lang/Iterable"
    ]
  },
  "org/spongepowered/asm/mixin/refmap/ReferenceMapper": {
    "name": "org/spongepowered/asm/mixin/refmap/ReferenceMapper",
    "interfaces": [
      "org/spongepowered/asm/mixin/refmap/IReferenceMapper",
      "java/io/Serializable"
    ]
  },
  "org/spongepowered/asm/mixin/refmap/RemappingReferenceMapper": {
    "name": "org/spongepowered/asm/mixin/refmap/RemappingReferenceMapper",
    "interfaces": [
      "org/spongepowered/asm/mixin/refmap/IReferenceMapper"
    ]
  },
  "org/spongepowered/asm/mixin/refmap/RemappingReferenceMapper$1": {
    "name": "org/spongepowered/asm/mixin/refmap/RemappingReferenceMapper$1",
    "interfaces": [
      "com/google/common/io/LineProcessor"
    ]
  },
  "org/spongepowered/asm/mixin/struct/SpecialMethodInfo": {
    "name": "org/spongepowered/asm/mixin/struct/SpecialMethodInfo",
    "interfaces": [
      "org/spongepowered/asm/mixin/injection/IInjectionPointContext"
    ]
  },
  "org/spongepowered/asm/mixin/transformer/InnerClassGenerator": {
    "name": "org/spongepowered/asm/mixin/transformer/InnerClassGenerator",
    "interfaces": [
      "org/spongepowered/asm/mixin/transformer/ext/IClassGenerator"
    ]
  },
  "org/spongepowered/asm/mixin/transformer/MixinConfig": {
    "name": "org/spongepowered/asm/mixin/transformer/MixinConfig",
    "interfaces": [
      "java/lang/Comparable",
      "org/spongepowered/asm/mixin/extensibility/IMixinConfig"
    ],
    "annotations": [
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "selector",
        "value": {
          "value": "target"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "version",
        "value": {
          "value": "minVersion"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "compatibility",
        "value": {
          "value": "compatibilityLevel"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "required",
        "value": {
          "value": "required"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "priority",
        "value": {
          "value": "priority"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "mixinPriority",
        "value": {
          "value": "mixinPriority"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "mixinPackage",
        "value": {
          "value": "package"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "mixinClasses",
        "value": {
          "value": "mixins"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "mixinClassesClient",
        "value": {
          "value": "client"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "mixinClassesServer",
        "value": {
          "value": "server"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "setSourceFile",
        "value": {
          "value": "setSourceFile"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "refMapperConfig",
        "value": {
          "value": "refmap"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "verboseLogging",
        "value": {
          "value": "verbose"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "pluginClassName",
        "value": {
          "value": "plugin"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "injectorOptions",
        "value": {
          "value": "injectors"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "overwriteOptions",
        "value": {
          "value": "overwrites"
        }
      }
    ]
  },
  "org/spongepowered/asm/mixin/transformer/MixinConfig$InjectorOptions": {
    "name": "org/spongepowered/asm/mixin/transformer/MixinConfig$InjectorOptions",
    "annotations": [
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "defaultRequireValue",
        "value": {
          "value": "defaultRequire"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "defaultGroup",
        "value": {
          "value": "defaultGroup"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "injectionPoints",
        "value": {
          "value": "injectionPoints"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "maxShiftBy",
        "value": {
          "value": "maxShiftBy"
        }
      }
    ]
  },
  "org/spongepowered/asm/mixin/transformer/MixinConfig$OverwriteOptions": {
    "name": "org/spongepowered/asm/mixin/transformer/MixinConfig$OverwriteOptions",
    "annotations": [
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "conformAccessModifiers",
        "value": {
          "value": "conformVisibility"
        }
      },
      {
        "type": "FIELD",
        "name": "Lcom/google/gson/annotations/SerializedName;",
        "target": "requireOverwriteAnnotations",
        "value": {
          "value": "requireAnnotations"
        }
      }
    ]
  },
  "org/spongepowered/asm/mixin/transformer/MixinInfo": {
    "name": "org/spongepowered/asm/mixin/transformer/MixinInfo",
    "interfaces": [
      "java/lang/Comparable",
      "org/spongepowered/asm/mixin/extensibility/IMixinInfo"
    ]
  },
  "org/spongepowered/asm/mixin/transformer/MixinInfo$1": {
    "name": "org/spongepowered/asm/mixin/transformer/MixinInfo$1",
    "interfaces": [
      "com/google/common/base/Function"
    ]
  },
  "org/spongepowered/asm/mixin/transformer/MixinInfo$2": {
    "name": "org/spongepowered/asm/mixin/transformer/MixinInfo$2",
    "interfaces": [
      "com/google/common/base/Function"
    ]
  },
  "org/spongepowered/asm/mixin/transformer/MixinPostProcessor": {
    "name": "org/spongepowered/asm/mixin/transformer/MixinPostProcessor",
    "interfaces": [
      "org/spongepowered/asm/mixin/transformer/MixinConfig$IListener"
    ]
  },
  "org/spongepowered/asm/mixin/transformer/MixinTargetContext": {
    "name": "org/spongepowered/asm/mixin/transformer/MixinTargetContext",
    "interfaces": [
      "org/spongepowered/asm/mixin/refmap/IMixinContext"
    ]
  },
  "org/spongepowered/asm/mixin/transformer/MixinTransformer$1": {
    "name": "org/spongepowered/asm/mixin/transformer/MixinTransformer$1",
    "interfaces": [
      "org/spongepowered/asm/mixin/transformer/MixinConfig$IListener"
    ]
  },
  "org/spongepowered/asm/mixin/transformer/Proxy": {
    "name": "org/spongepowered/asm/mixin/transformer/Proxy",
    "interfaces": [
      "net/minecraft/launchwrapper/IClassTransformer",
      "org/spongepowered/asm/service/ILegacyClassTransformer"
    ]
  },
  "org/spongepowered/asm/mixin/transformer/TargetClassContext": {
    "name": "org/spongepowered/asm/mixin/transformer/TargetClassContext",
    "interfaces": [
      "org/spongepowered/asm/mixin/transformer/ext/ITargetClassContext"
    ]
  },
  "org/spongepowered/asm/mixin/transformer/debug/RuntimeDecompiler": {
    "name": "org/spongepowered/asm/mixin/transformer/debug/RuntimeDecompiler",
    "interfaces": [
      "org/spongepowered/asm/mixin/transformer/ext/IDecompiler",
      "org/jetbrains/java/decompiler/main/extern/IResultSaver"
    ]
  },
  "org/spongepowered/asm/mixin/transformer/debug/RuntimeDecompiler$1": {
    "name": "org/spongepowered/asm/mixin/transformer/debug/RuntimeDecompiler$1",
    "interfaces": [
      "org/jetbrains/java/decompiler/main/extern/IBytecodeProvider"
    ]
  },
  "org/spongepowered/asm/mixin/transformer/debug/RuntimeDecompilerAsync": {
    "name": "org/spongepowered/asm/mixin/transformer/debug/RuntimeDecompilerAsync",
    "interfaces": [
      "java/lang/Runnable",
      "java/lang/Thread$UncaughtExceptionHandler"
    ]
  },
  "org/spongepowered/asm/mixin/transformer/ext/extensions/ExtensionCheckClass": {
    "name": "org/spongepowered/asm/mixin/transformer/ext/extensions/ExtensionCheckClass",
    "interfaces": [
      "org/spongepowered/asm/mixin/transformer/ext/IExtension"
    ]
  },
  "org/spongepowered/asm/mixin/transformer/ext/extensions/ExtensionCheckInterfaces": {
    "name": "org/spongepowered/asm/mixin/transformer/ext/extensions/ExtensionCheckInterfaces",
    "interfaces": [
      "org/spongepowered/asm/mixin/transformer/ext/IExtension"
    ]
  },
  "org/spongepowered/asm/mixin/transformer/ext/extensions/ExtensionClassExporter": {
    "name": "org/spongepowered/asm/mixin/transformer/ext/extensions/ExtensionClassExporter",
    "interfaces": [
      "org/spongepowered/asm/mixin/transformer/ext/IExtension"
    ]
  },
  "org/spongepowered/asm/mixin/transformer/meta/MixinInner": {
    "name": "org/spongepowered/asm/mixin/transformer/meta/MixinInner",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/transformer/meta/MixinMerged": {
    "name": "org/spongepowered/asm/mixin/transformer/meta/MixinMerged",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/mixin/transformer/meta/MixinRenamed": {
    "name": "org/spongepowered/asm/mixin/transformer/meta/MixinRenamed",
    "interfaces": [
      "java/lang/annotation/Annotation"
    ]
  },
  "org/spongepowered/asm/obfuscation/RemapperChain": {
    "name": "org/spongepowered/asm/obfuscation/RemapperChain",
    "interfaces": [
      "org/spongepowered/asm/mixin/extensibility/IRemapper"
    ]
  },
  "org/spongepowered/asm/obfuscation/mapping/common/MappingField": {
    "name": "org/spongepowered/asm/obfuscation/mapping/common/MappingField",
    "interfaces": [
      "org/spongepowered/asm/obfuscation/mapping/IMapping"
    ]
  },
  "org/spongepowered/asm/obfuscation/mapping/common/MappingMethod": {
    "name": "org/spongepowered/asm/obfuscation/mapping/common/MappingMethod",
    "interfaces": [
      "org/spongepowered/asm/obfuscation/mapping/IMapping"
    ]
  },
  "org/spongepowered/asm/service/ILegacyClassTransformer": {
    "name": "org/spongepowered/asm/service/ILegacyClassTransformer",
    "interfaces": [
      "org/spongepowered/asm/service/ITransformer"
    ]
  },
  "org/spongepowered/asm/service/mojang/Blackboard": {
    "name": "org/spongepowered/asm/service/mojang/Blackboard",
    "interfaces": [
      "org/spongepowered/asm/service/IGlobalPropertyService"
    ]
  },
  "org/spongepowered/asm/service/mojang/LegacyTransformerHandle": {
    "name": "org/spongepowered/asm/service/mojang/LegacyTransformerHandle",
    "interfaces": [
      "org/spongepowered/asm/service/ILegacyClassTransformer"
    ]
  },
  "org/spongepowered/asm/service/mojang/MixinServiceLaunchWrapper": {
    "name": "org/spongepowered/asm/service/mojang/MixinServiceLaunchWrapper",
    "interfaces": [
      "org/spongepowered/asm/service/IMixinService",
      "org/spongepowered/asm/service/IClassProvider",
      "org/spongepowered/asm/service/IClassBytecodeProvider"
    ]
  },
  "org/spongepowered/asm/service/mojang/MixinServiceLaunchWrapperBootstrap": {
    "name": "org/spongepowered/asm/service/mojang/MixinServiceLaunchWrapperBootstrap",
    "interfaces": [
      "org/spongepowered/asm/service/IMixinServiceBootstrap"
    ]
  },
  "org/spongepowered/asm/transformers/TreeTransformer": {
    "name": "org/spongepowered/asm/transformers/TreeTransformer",
    "interfaces": [
      "org/spongepowered/asm/service/ILegacyClassTransformer"
    ]
  },
  "org/spongepowered/asm/util/Annotations$1": {
    "name": "org/spongepowered/asm/util/Annotations$1",
    "interfaces": [
      "com/google/common/base/Function"
    ]
  },
  "org/spongepowered/asm/util/ClassSignature$Token": {
    "name": "org/spongepowered/asm/util/ClassSignature$Token",
    "interfaces": [
      "org/spongepowered/asm/util/ClassSignature$IToken"
    ]
  },
  "org/spongepowered/asm/util/ClassSignature$TokenHandle": {
    "name": "org/spongepowered/asm/util/ClassSignature$TokenHandle",
    "interfaces": [
      "org/spongepowered/asm/util/ClassSignature$IToken"
    ]
  },
  "org/spongepowered/asm/util/ClassSignature$TypeVar": {
    "name": "org/spongepowered/asm/util/ClassSignature$TypeVar",
    "interfaces": [
      "java/lang/Comparable"
    ]
  },
  "org/spongepowered/asm/util/PrettyPrinter$HorizontalRule": {
    "name": "org/spongepowered/asm/util/PrettyPrinter$HorizontalRule",
    "interfaces": [
      "org/spongepowered/asm/util/PrettyPrinter$ISpecialEntry"
    ]
  },
  "org/spongepowered/asm/util/PrettyPrinter$KeyValue": {
    "name": "org/spongepowered/asm/util/PrettyPrinter$KeyValue",
    "interfaces": [
      "org/spongepowered/asm/util/PrettyPrinter$IVariableWidthEntry"
    ]
  },
  "org/spongepowered/asm/util/PrettyPrinter$Row": {
    "name": "org/spongepowered/asm/util/PrettyPrinter$Row",
    "interfaces": [
      "org/spongepowered/asm/util/PrettyPrinter$IVariableWidthEntry"
    ]
  },
  "org/spongepowered/asm/util/PrettyPrinter$Table": {
    "name": "org/spongepowered/asm/util/PrettyPrinter$Table",
    "interfaces": [
      "org/spongepowered/asm/util/PrettyPrinter$IVariableWidthEntry"
    ]
  },
  "org/spongepowered/asm/util/VersionNumber": {
    "name": "org/spongepowered/asm/util/VersionNumber",
    "interfaces": [
      "java/lang/Comparable",
      "java/io/Serializable"
    ]
  },
  "org/spongepowered/tools/agent/MixinAgent": {
    "name": "org/spongepowered/tools/agent/MixinAgent",
    "interfaces": [
      "org/spongepowered/asm/mixin/transformer/ext/IHotSwap"
    ]
  },
  "org/spongepowered/tools/agent/MixinAgent$Transformer": {
    "name": "org/spongepowered/tools/agent/MixinAgent$Transformer",
    "interfaces": [
      "java/lang/instrument/ClassFileTransformer"
    ]
  },
  "org/spongepowered/tools/obfuscation/AnnotatedMixinElementHandlerAccessor": {
    "name": "org/spongepowered/tools/obfuscation/AnnotatedMixinElementHandlerAccessor",
    "interfaces": [
      "org/spongepowered/asm/mixin/refmap/IMixinContext"
    ]
  },
  "org/spongepowered/tools/obfuscation/AnnotatedMixins": {
    "name": "org/spongepowered/tools/obfuscation/AnnotatedMixins",
    "interfaces": [
      "org/spongepowered/tools/obfuscation/interfaces/IMixinAnnotationProcessor",
      "org/spongepowered/asm/util/ITokenProvider",
      "org/spongepowered/tools/obfuscation/interfaces/ITypeHandleProvider",
      "org/spongepowered/tools/obfuscation/interfaces/IJavadocProvider"
    ]
  },
  "org/spongepowered/tools/obfuscation/Mappings": {
    "name": "org/spongepowered/tools/obfuscation/Mappings",
    "interfaces": [
      "org/spongepowered/tools/obfuscation/mapping/IMappingConsumer"
    ]
  },
  "org/spongepowered/tools/obfuscation/Mappings$UniqueMappings": {
    "name": "org/spongepowered/tools/obfuscation/Mappings$UniqueMappings",
    "interfaces": [
      "org/spongepowered/tools/obfuscation/mapping/IMappingConsumer"
    ]
  },
  "org/spongepowered/tools/obfuscation/MixinValidator": {
    "name": "org/spongepowered/tools/obfuscation/MixinValidator",
    "interfaces": [
      "org/spongepowered/tools/obfuscation/interfaces/IMixinValidator"
    ]
  },
  "org/spongepowered/tools/obfuscation/ObfuscationData": {
    "name": "org/spongepowered/tools/obfuscation/ObfuscationData",
    "interfaces": [
      "java/lang/Iterable"
    ]
  },
  "org/spongepowered/tools/obfuscation/ObfuscationDataProvider": {
    "name": "org/spongepowered/tools/obfuscation/ObfuscationDataProvider",
    "interfaces": [
      "org/spongepowered/tools/obfuscation/interfaces/IObfuscationDataProvider"
    ]
  },
  "org/spongepowered/tools/obfuscation/ObfuscationEnvironment": {
    "name": "org/spongepowered/tools/obfuscation/ObfuscationEnvironment",
    "interfaces": [
      "org/spongepowered/tools/obfuscation/interfaces/IObfuscationEnvironment"
    ]
  },
  "org/spongepowered/tools/obfuscation/ObfuscationEnvironment$RemapperProxy": {
    "name": "org/spongepowered/tools/obfuscation/ObfuscationEnvironment$RemapperProxy",
    "interfaces": [
      "org/spongepowered/asm/util/ObfuscationUtil$IClassRemapper"
    ]
  },
  "org/spongepowered/tools/obfuscation/ObfuscationManager": {
    "name": "org/spongepowered/tools/obfuscation/ObfuscationManager",
    "interfaces": [
      "org/spongepowered/tools/obfuscation/interfaces/IObfuscationManager"
    ]
  },
  "org/spongepowered/tools/obfuscation/ReferenceManager": {
    "name": "org/spongepowered/tools/obfuscation/ReferenceManager",
    "interfaces": [
      "org/spongepowered/tools/obfuscation/interfaces/IReferenceManager"
    ]
  },
  "org/spongepowered/tools/obfuscation/interfaces/IMixinAnnotationProcessor": {
    "name": "org/spongepowered/tools/obfuscation/interfaces/IMixinAnnotationProcessor",
    "interfaces": [
      "javax/annotation/processing/Messager",
      "org/spongepowered/tools/obfuscation/interfaces/IOptionProvider"
    ]
  },
  "org/spongepowered/tools/obfuscation/mapping/common/MappingProvider": {
    "name": "org/spongepowered/tools/obfuscation/mapping/common/MappingProvider",
    "interfaces": [
      "org/spongepowered/tools/obfuscation/mapping/IMappingProvider"
    ]
  },
  "org/spongepowered/tools/obfuscation/mapping/common/MappingWriter": {
    "name": "org/spongepowered/tools/obfuscation/mapping/common/MappingWriter",
    "interfaces": [
      "org/spongepowered/tools/obfuscation/mapping/IMappingWriter"
    ]
  },
  "org/spongepowered/tools/obfuscation/mapping/mcp/MappingProviderSrg$1": {
    "name": "org/spongepowered/tools/obfuscation/mapping/mcp/MappingProviderSrg$1",
    "interfaces": [
      "com/google/common/io/LineProcessor"
    ]
  },
  "org/spongepowered/tools/obfuscation/mcp/ObfuscationServiceMCP": {
    "name": "org/spongepowered/tools/obfuscation/mcp/ObfuscationServiceMCP",
    "interfaces": [
      "org/spongepowered/tools/obfuscation/service/IObfuscationService"
    ]
  },
  "org/spongepowered/tools/obfuscation/mirror/TypeReference": {
    "name": "org/spongepowered/tools/obfuscation/mirror/TypeReference",
    "interfaces": [
      "java/io/Serializable",
      "java/lang/Comparable"
    ]
  },
  "org/yaml/snakeyaml/Yaml$1": {
    "name": "org/yaml/snakeyaml/Yaml$1",
    "interfaces": [
      "java/util/Iterator"
    ]
  },
  "org/yaml/snakeyaml/Yaml$2": {
    "name": "org/yaml/snakeyaml/Yaml$2",
    "interfaces": [
      "java/util/Iterator"
    ]
  },
  "org/yaml/snakeyaml/Yaml$3": {
    "name": "org/yaml/snakeyaml/Yaml$3",
    "interfaces": [
      "java/util/Iterator"
    ]
  },
  "org/yaml/snakeyaml/Yaml$EventIterable": {
    "name": "org/yaml/snakeyaml/Yaml$EventIterable",
    "interfaces": [
      "java/lang/Iterable"
    ]
  },
  "org/yaml/snakeyaml/Yaml$NodeIterable": {
    "name": "org/yaml/snakeyaml/Yaml$NodeIterable",
    "interfaces": [
      "java/lang/Iterable"
    ]
  },
  "org/yaml/snakeyaml/Yaml$SilentEmitter": {
    "name": "org/yaml/snakeyaml/Yaml$SilentEmitter",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/Emitable"
    ]
  },
  "org/yaml/snakeyaml/Yaml$YamlIterable": {
    "name": "org/yaml/snakeyaml/Yaml$YamlIterable",
    "interfaces": [
      "java/lang/Iterable"
    ]
  },
  "org/yaml/snakeyaml/constructor/AbstractConstruct": {
    "name": "org/yaml/snakeyaml/constructor/AbstractConstruct",
    "interfaces": [
      "org/yaml/snakeyaml/constructor/Construct"
    ]
  },
  "org/yaml/snakeyaml/constructor/Constructor$ConstructMapping": {
    "name": "org/yaml/snakeyaml/constructor/Constructor$ConstructMapping",
    "interfaces": [
      "org/yaml/snakeyaml/constructor/Construct"
    ]
  },
  "org/yaml/snakeyaml/constructor/Constructor$ConstructSequence": {
    "name": "org/yaml/snakeyaml/constructor/Constructor$ConstructSequence",
    "interfaces": [
      "org/yaml/snakeyaml/constructor/Construct"
    ]
  },
  "org/yaml/snakeyaml/constructor/Constructor$ConstructYamlObject": {
    "name": "org/yaml/snakeyaml/constructor/Constructor$ConstructYamlObject",
    "interfaces": [
      "org/yaml/snakeyaml/constructor/Construct"
    ]
  },
  "org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlMap": {
    "name": "org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlMap",
    "interfaces": [
      "org/yaml/snakeyaml/constructor/Construct"
    ]
  },
  "org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlSeq": {
    "name": "org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlSeq",
    "interfaces": [
      "org/yaml/snakeyaml/constructor/Construct"
    ]
  },
  "org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlSet": {
    "name": "org/yaml/snakeyaml/constructor/SafeConstructor$ConstructYamlSet",
    "interfaces": [
      "org/yaml/snakeyaml/constructor/Construct"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter": {
    "name": "org/yaml/snakeyaml/emitter/Emitter",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/Emitable"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter$ExpectBlockMappingKey": {
    "name": "org/yaml/snakeyaml/emitter/Emitter$ExpectBlockMappingKey",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/EmitterState"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter$ExpectBlockMappingSimpleValue": {
    "name": "org/yaml/snakeyaml/emitter/Emitter$ExpectBlockMappingSimpleValue",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/EmitterState"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter$ExpectBlockMappingValue": {
    "name": "org/yaml/snakeyaml/emitter/Emitter$ExpectBlockMappingValue",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/EmitterState"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter$ExpectBlockSequenceItem": {
    "name": "org/yaml/snakeyaml/emitter/Emitter$ExpectBlockSequenceItem",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/EmitterState"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter$ExpectDocumentEnd": {
    "name": "org/yaml/snakeyaml/emitter/Emitter$ExpectDocumentEnd",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/EmitterState"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter$ExpectDocumentRoot": {
    "name": "org/yaml/snakeyaml/emitter/Emitter$ExpectDocumentRoot",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/EmitterState"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter$ExpectDocumentStart": {
    "name": "org/yaml/snakeyaml/emitter/Emitter$ExpectDocumentStart",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/EmitterState"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter$ExpectFirstBlockMappingKey": {
    "name": "org/yaml/snakeyaml/emitter/Emitter$ExpectFirstBlockMappingKey",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/EmitterState"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter$ExpectFirstBlockSequenceItem": {
    "name": "org/yaml/snakeyaml/emitter/Emitter$ExpectFirstBlockSequenceItem",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/EmitterState"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter$ExpectFirstDocumentStart": {
    "name": "org/yaml/snakeyaml/emitter/Emitter$ExpectFirstDocumentStart",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/EmitterState"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter$ExpectFirstFlowMappingKey": {
    "name": "org/yaml/snakeyaml/emitter/Emitter$ExpectFirstFlowMappingKey",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/EmitterState"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter$ExpectFirstFlowSequenceItem": {
    "name": "org/yaml/snakeyaml/emitter/Emitter$ExpectFirstFlowSequenceItem",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/EmitterState"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter$ExpectFlowMappingKey": {
    "name": "org/yaml/snakeyaml/emitter/Emitter$ExpectFlowMappingKey",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/EmitterState"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter$ExpectFlowMappingSimpleValue": {
    "name": "org/yaml/snakeyaml/emitter/Emitter$ExpectFlowMappingSimpleValue",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/EmitterState"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter$ExpectFlowMappingValue": {
    "name": "org/yaml/snakeyaml/emitter/Emitter$ExpectFlowMappingValue",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/EmitterState"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter$ExpectFlowSequenceItem": {
    "name": "org/yaml/snakeyaml/emitter/Emitter$ExpectFlowSequenceItem",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/EmitterState"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter$ExpectNothing": {
    "name": "org/yaml/snakeyaml/emitter/Emitter$ExpectNothing",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/EmitterState"
    ]
  },
  "org/yaml/snakeyaml/emitter/Emitter$ExpectStreamStart": {
    "name": "org/yaml/snakeyaml/emitter/Emitter$ExpectStreamStart",
    "interfaces": [
      "org/yaml/snakeyaml/emitter/EmitterState"
    ]
  },
  "org/yaml/snakeyaml/error/Mark": {
    "name": "org/yaml/snakeyaml/error/Mark",
    "interfaces": [
      "java/io/Serializable"
    ]
  },
  "org/yaml/snakeyaml/external/com/google/gdata/util/common/base/UnicodeEscaper": {
    "name": "org/yaml/snakeyaml/external/com/google/gdata/util/common/base/UnicodeEscaper",
    "interfaces": [
      "org/yaml/snakeyaml/external/com/google/gdata/util/common/base/Escaper"
    ]
  },
  "org/yaml/snakeyaml/external/com/google/gdata/util/common/base/UnicodeEscaper$1": {
    "name": "org/yaml/snakeyaml/external/com/google/gdata/util/common/base/UnicodeEscaper$1",
    "interfaces": [
      "java/lang/Appendable"
    ]
  },
  "org/yaml/snakeyaml/introspector/Property": {
    "name": "org/yaml/snakeyaml/introspector/Property",
    "interfaces": [
      "java/lang/Comparable"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Parser"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseBlockMappingFirstKey": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseBlockMappingFirstKey",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseBlockMappingKey": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseBlockMappingKey",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseBlockMappingValue": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseBlockMappingValue",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseBlockNode": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseBlockNode",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseBlockSequenceEntry": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseBlockSequenceEntry",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseBlockSequenceFirstEntry": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseBlockSequenceFirstEntry",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseDocumentContent": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseDocumentContent",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseDocumentEnd": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseDocumentEnd",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseDocumentStart": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseDocumentStart",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseFlowMappingEmptyValue": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseFlowMappingEmptyValue",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseFlowMappingFirstKey": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseFlowMappingFirstKey",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseFlowMappingKey": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseFlowMappingKey",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseFlowMappingValue": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseFlowMappingValue",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseFlowSequenceEntry": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseFlowSequenceEntry",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseFlowSequenceEntryMappingEnd": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseFlowSequenceEntryMappingEnd",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseFlowSequenceEntryMappingKey": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseFlowSequenceEntryMappingKey",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseFlowSequenceEntryMappingValue": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseFlowSequenceEntryMappingValue",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseFlowSequenceFirstEntry": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseFlowSequenceFirstEntry",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseImplicitDocumentStart": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseImplicitDocumentStart",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseIndentlessSequenceEntry": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseIndentlessSequenceEntry",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/parser/ParserImpl$ParseStreamStart": {
    "name": "org/yaml/snakeyaml/parser/ParserImpl$ParseStreamStart",
    "interfaces": [
      "org/yaml/snakeyaml/parser/Production"
    ]
  },
  "org/yaml/snakeyaml/representer/Representer$RepresentJavaBean": {
    "name": "org/yaml/snakeyaml/representer/Representer$RepresentJavaBean",
    "interfaces": [
      "org/yaml/snakeyaml/representer/Represent"
    ]
  },
  "org/yaml/snakeyaml/representer/SafeRepresenter$IteratorWrapper": {
    "name": "org/yaml/snakeyaml/representer/SafeRepresenter$IteratorWrapper",
    "interfaces": [
      "java/lang/Iterable"
    ]
  },
  "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentArray": {
    "name": "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentArray",
    "interfaces": [
      "org/yaml/snakeyaml/representer/Represent"
    ]
  },
  "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentBoolean": {
    "name": "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentBoolean",
    "interfaces": [
      "org/yaml/snakeyaml/representer/Represent"
    ]
  },
  "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentByteArray": {
    "name": "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentByteArray",
    "interfaces": [
      "org/yaml/snakeyaml/representer/Represent"
    ]
  },
  "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentDate": {
    "name": "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentDate",
    "interfaces": [
      "org/yaml/snakeyaml/representer/Represent"
    ]
  },
  "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentEnum": {
    "name": "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentEnum",
    "interfaces": [
      "org/yaml/snakeyaml/representer/Represent"
    ]
  },
  "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentIterator": {
    "name": "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentIterator",
    "interfaces": [
      "org/yaml/snakeyaml/representer/Represent"
    ]
  },
  "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentList": {
    "name": "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentList",
    "interfaces": [
      "org/yaml/snakeyaml/representer/Represent"
    ]
  },
  "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentMap": {
    "name": "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentMap",
    "interfaces": [
      "org/yaml/snakeyaml/representer/Represent"
    ]
  },
  "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentNull": {
    "name": "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentNull",
    "interfaces": [
      "org/yaml/snakeyaml/representer/Represent"
    ]
  },
  "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentNumber": {
    "name": "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentNumber",
    "interfaces": [
      "org/yaml/snakeyaml/representer/Represent"
    ]
  },
  "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentPrimitiveArray": {
    "name": "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentPrimitiveArray",
    "interfaces": [
      "org/yaml/snakeyaml/representer/Represent"
    ]
  },
  "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentSet": {
    "name": "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentSet",
    "interfaces": [
      "org/yaml/snakeyaml/representer/Represent"
    ]
  },
  "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentString": {
    "name": "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentString",
    "interfaces": [
      "org/yaml/snakeyaml/representer/Represent"
    ]
  },
  "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentUuid": {
    "name": "org/yaml/snakeyaml/representer/SafeRepresenter$RepresentUuid",
    "interfaces": [
      "org/yaml/snakeyaml/representer/Represent"
    ]
  },
  "org/yaml/snakeyaml/scanner/ScannerImpl": {
    "name": "org/yaml/snakeyaml/scanner/ScannerImpl",
    "interfaces": [
      "org/yaml/snakeyaml/scanner/Scanner"
    ]
  },
  "org/yaml/snakeyaml/serializer/NumberAnchorGenerator": {
    "name": "org/yaml/snakeyaml/serializer/NumberAnchorGenerator",
    "interfaces": [
      "org/yaml/snakeyaml/serializer/AnchorGenerator"
    ]
  }
}