//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\u1\Documents\Java Decompiler\1.12 stable mappings"!

//Decompiled by Procyon!

package com.veteran.hack.module.modules.exploits;

import com.veteran.hack.module.*;
import com.veteran.hack.event.events.*;
import me.zero.alpine.listener.*;
import com.veteran.hack.setting.*;
import java.util.function.*;
import com.veteran.hack.command.*;
import net.minecraft.network.play.client.*;

@Module.Info(name = "PacketCanceller", category = Module.Category.EXPLOIT, description = "Cancels packets to do the ice donkey dupe")
public class PacketCanceller extends Module
{
    private Setting<CancelMode> mode;
    private Setting<Boolean> timer;
    int time;
    @EventHandler
    private Listener<PacketEvent.Send> sendListener;
    
    public PacketCanceller() {
        this.mode = (Setting<CancelMode>)this.register((Setting)Settings.e("Mode", CancelMode.BYPASS));
        this.timer = (Setting<Boolean>)this.register((Setting)Settings.b("Timer (10s)", false));
        this.time = 220;
        this.sendListener = (Listener<PacketEvent.Send>)new Listener(e -> {
            if (e.getPacket() instanceof CPacketPlayer || e.getPacket() instanceof CPacketInput || e.getPacket() instanceof CPacketUseEntity || e.getPacket() instanceof CPacketVehicleMove || e.getPacket() instanceof CPacketEntityAction) {
                e.cancel();
            }
            if (this.mode.getValue() == CancelMode.ORIGINAL && (e.getPacket() instanceof CPacketPlayerAbilities || e.getPacket() instanceof CPacketPlayerTryUseItem || e.getPacket() instanceof CPacketPlayerTryUseItemOnBlock || e.getPacket() instanceof CPacketPlayerDigging)) {
                e.cancel();
            }
        }, new Predicate[0]);
    }
    
    public void onEnable() {
        Command.sendChatMessage(this.getChatName() + "Cancelling Packets!");
        this.time = 360;
    }
    
    public void onDisable() {
        Command.sendChatMessage(this.getChatName() + "No Longer Cancelling Packets");
    }
    
    public void onUpdate() {
        if (this.timer.getValue()) {
            --this.time;
        }
        if (this.time <= 0) {
            this.disable();
        }
    }
    
    enum CancelMode
    {
        BYPASS, 
        ORIGINAL;
    }
}
